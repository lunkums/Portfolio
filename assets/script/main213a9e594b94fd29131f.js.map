{"version":3,"file":"main213a9e594b94fd29131f.js","mappings":"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","sources":["webpack://webpack-test/./src/styles/stylesheet.css","webpack://webpack-test/./node_modules/css-loader/dist/runtime/api.js","webpack://webpack-test/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://webpack-test/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://webpack-test/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://webpack-test/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://webpack-test/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://webpack-test/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://webpack-test/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://webpack-test/./src/shaders/fragment.glsl","webpack://webpack-test/./src/shaders/vertex.glsl","webpack://webpack-test/webpack/bootstrap","webpack://webpack-test/webpack/runtime/compat get default export","webpack://webpack-test/webpack/runtime/define property getters","webpack://webpack-test/webpack/runtime/hasOwnProperty shorthand","webpack://webpack-test/webpack/runtime/nonce","webpack://webpack-test/./src/input.ts","webpack://webpack-test/./src/constants.ts","webpack://webpack-test/./src/matrix4.ts","webpack://webpack-test/./src/quaternion.ts","webpack://webpack-test/./src/vector3.ts","webpack://webpack-test/./src/entity.ts","webpack://webpack-test/./src/spatial_object.ts","webpack://webpack-test/./src/camera.ts","webpack://webpack-test/./src/color.ts","webpack://webpack-test/./src/shader_setup.ts","webpack://webpack-test/./src/render_state.ts","webpack://webpack-test/./src/component.ts","webpack://webpack-test/./src/cylinder.js","webpack://webpack-test/./src/sphere.js","webpack://webpack-test/./src/component_factory.ts","webpack://webpack-test/./src/entity_factory.ts","webpack://webpack-test/./src/world.ts","webpack://webpack-test/./src/styles/stylesheet.css?f49a","webpack://webpack-test/./src/index.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"html,\\r\\nbody,\\r\\npre {\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n* {\\r\\n    background-color: #363d4a;\\r\\n}\\r\\n\\r\\nh1,\\r\\nfooter {\\r\\n    padding: 1rem;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\nhtml,\\r\\nbody {\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.flex {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.flex-end {\\r\\n    display: block;\\r\\n    justify-content: flex-end;\\r\\n}\\r\\n\\r\\n.font {\\r\\n    font-family: 'Courier New', Courier, monospace;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.centered {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.dotted-border {\\r\\n    border: 1px dashed #cdced2;\\r\\n}\\r\\n\\r\\n.canvas-container {\\r\\n    width: 95vw; \\r\\n    height: calc(95vw * 9 / 16);\\r\\n  \\r\\n    /* align center */\\r\\n    margin: auto;\\r\\n    position: relative;\\r\\n    top: 0px; right: 0px; bottom: 0px; left: 0px;\\r\\n}\\r\\n\\r\\n  /* 100 * 16/9 = 177.778 */\\r\\n@media (min-width: 177.778vh) {\\r\\n    .canvas-container {\\r\\n      height: 80vh;\\r\\n      width: calc(80vh * 16 / 9);\\r\\n    }\\r\\n}\\r\\n\\r\\n#code00-canvas {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n#overlay {\\r\\n    position: absolute;\\r\\n    left: 10px;\\r\\n    top: 10px;\\r\\n    background-color: rgba(0, 0, 0, 0.1);\\r\\n    color: white;\\r\\n    font-family: monospace;\\r\\n    padding: 1em;\\r\\n}\\r\\n\\r\\n#overlay * {\\r\\n    background-color: rgba(0, 0, 0, 0);\\r\\n}\\r\\n\\r\\n#overlay em {\\r\\n    color: grey;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/stylesheet.css\"],\"names\":[],\"mappings\":\"AAAA;;;IAGI,UAAU;IACV,SAAS;AACb;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;;IAEI,aAAa;IACb,SAAS;AACb;;AAEA;;IAEI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,cAAc;IACd,yBAAyB;AAC7B;;AAEA;IACI,8CAA8C;IAC9C,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,WAAW;IACX,2BAA2B;;IAE3B,iBAAiB;IACjB,YAAY;IACZ,kBAAkB;IAClB,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS;AAChD;;EAEE,yBAAyB;AAC3B;IACI;MACE,YAAY;MACZ,0BAA0B;IAC5B;AACJ;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,SAAS;IACT,oCAAoC;IACpC,YAAY;IACZ,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,WAAW;AACf\",\"sourcesContent\":[\"html,\\r\\nbody,\\r\\npre {\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n* {\\r\\n    background-color: #363d4a;\\r\\n}\\r\\n\\r\\nh1,\\r\\nfooter {\\r\\n    padding: 1rem;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\nhtml,\\r\\nbody {\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.flex {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.flex-end {\\r\\n    display: block;\\r\\n    justify-content: flex-end;\\r\\n}\\r\\n\\r\\n.font {\\r\\n    font-family: 'Courier New', Courier, monospace;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.centered {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.dotted-border {\\r\\n    border: 1px dashed #cdced2;\\r\\n}\\r\\n\\r\\n.canvas-container {\\r\\n    width: 95vw; \\r\\n    height: calc(95vw * 9 / 16);\\r\\n  \\r\\n    /* align center */\\r\\n    margin: auto;\\r\\n    position: relative;\\r\\n    top: 0px; right: 0px; bottom: 0px; left: 0px;\\r\\n}\\r\\n\\r\\n  /* 100 * 16/9 = 177.778 */\\r\\n@media (min-width: 177.778vh) {\\r\\n    .canvas-container {\\r\\n      height: 80vh;\\r\\n      width: calc(80vh * 16 / 9);\\r\\n    }\\r\\n}\\r\\n\\r\\n#code00-canvas {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n#overlay {\\r\\n    position: absolute;\\r\\n    left: 10px;\\r\\n    top: 10px;\\r\\n    background-color: rgba(0, 0, 0, 0.1);\\r\\n    color: white;\\r\\n    font-family: monospace;\\r\\n    padding: 1em;\\r\\n}\\r\\n\\r\\n#overlay * {\\r\\n    background-color: rgba(0, 0, 0, 0);\\r\\n}\\r\\n\\r\\n#overlay em {\\r\\n    color: grey;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","module.exports = \"precision mediump float;\\r\\nvarying vec4 vColor; \\r\\n\\r\\nvoid main(void) {\\r\\n    gl_FragColor = vColor;\\r\\n}\"","module.exports = \"attribute vec4 aVertexPosition;\\r\\nattribute vec4 aVertexColor;\\r\\n\\r\\nuniform mat4 uModelMatrix;\\r\\nuniform mat4 uViewProjectionMatrix;\\r\\n\\r\\nvarying vec4 vColor;\\r\\n\\r\\nvoid main(void) {\\r\\n    gl_Position = uViewProjectionMatrix * uModelMatrix * aVertexPosition;\\r\\n    vColor = aVertexColor;\\r\\n}\"","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","/**\r\n * A collection of utility methods allowing for the deferred processing of input (as opposed to the typical way of\r\n * dealing with input in JavaScript, using the observer pattern).\r\n * \r\n * This namespace makes heavy use of actions, which are mappings between human-readable names and keyboard key strings\r\n * (i.e. \"a\", \"Shift\", \";\") that allow users to check the state of a key at any point in time.\r\n */\r\nnamespace Input {\r\n    addEventListener(\"keydown\", onKeyDown);\r\n    addEventListener(\"keyup\", onKeyUp);\r\n    addEventListener(\"focus\", resetActionStates);\r\n    addEventListener(\"blur\", resetActionStates);\r\n\r\n    let actionMap: Map<string, string> = new Map<string, string>();\r\n    let actionStates: Map<string, ActionState> = new Map<string, ActionState>();\r\n    let isInputCaseSensitive: boolean = false;\r\n\r\n    /**\r\n     * The current state of an action.\r\n     */\r\n    enum ActionState {\r\n        None = 0,\r\n        Up = 1,\r\n        Down = 2\r\n    }\r\n\r\n    /**\r\n     * Initialize the input handler with a new set of action mappings.\r\n     * @param actionMap The mapping between unique string identifiers and keyboard keys.\r\n     * @param caseSensitiveInput Whether separate action states should be stored for the same key while \"Shift\" is held\r\n     * down (i.e. \"A\" vs \"a\").\r\n     */\r\n    export function initialize(actionMap: object, caseSensitiveInput: boolean = false): void {\r\n        isInputCaseSensitive = caseSensitiveInput;\r\n        Object.entries(actionMap).forEach((value, index) => {\r\n            let actionName: string = value[0];\r\n            let key: string = value[1];\r\n            addAction(actionName, key);\r\n        });\r\n    }\r\n\r\n    export function addAction(actionName: string, key: string): void {\r\n        if (!isInputCaseSensitive) {\r\n            key = capitalizeFirstLetter(key);\r\n        }\r\n        if (actionMap.has(actionName)) {\r\n            console.error(`Input already recognizes action: ${actionName}`);\r\n            return;\r\n        }\r\n        if (actionStates.has(key)) {\r\n            console.error(`Input already recognizes key: ${key}`);\r\n            return;\r\n        }\r\n        actionMap.set(actionName, key);\r\n        actionStates.set(key, ActionState.Up);\r\n    }\r\n\r\n    export function isActionUp(actionName: string): boolean {\r\n        return getActionStateFromName(actionName) === ActionState.Up;\r\n    }\r\n\r\n    export function isActionDown(actionName: string): boolean {\r\n        return getActionStateFromName(actionName) === ActionState.Down;\r\n    }\r\n    \r\n    /**\r\n     * Helper methods\r\n     */\r\n\r\n    function getActionStateFromName(actionName: string): ActionState {\r\n        if (!actionMap.has(actionName)) {\r\n            console.error(`Input doesn't recognize action: ${actionName}`);\r\n            return ActionState.None;\r\n        }\r\n        return actionStates.get(actionMap.get(actionName));\r\n    }\r\n\r\n    function setActionStateFromKey(key: string, actionState: ActionState) {\r\n        if (!isInputCaseSensitive) {\r\n            key = capitalizeFirstLetter(key);\r\n        }\r\n        if (!actionStates.has(key)) {\r\n            return;\r\n        }\r\n        actionStates.set(key, actionState);\r\n    }\r\n\r\n    function capitalizeFirstLetter(s: string): string {\r\n        return s.charAt(0).toUpperCase() + s.slice(1);\r\n    }\r\n    \r\n    /**\r\n     * Event listeners\r\n     */\r\n\r\n    function onKeyDown(this: Window, ev: KeyboardEvent) {\r\n        setActionStateFromKey(ev.key, ActionState.Down);\r\n    }\r\n\r\n    function onKeyUp(this: Window, ev: KeyboardEvent) {\r\n        setActionStateFromKey(ev.key, ActionState.Up);\r\n    }\r\n\r\n    function resetActionStates(this: Window, ev: FocusEvent): void {\r\n        for (const [key, value] of actionStates) {\r\n            setActionStateFromKey(key, ActionState.Up);\r\n        }\r\n    }\r\n}\r\n\r\nexport { Input }\r\n","namespace Constants {\r\n    export const EPSILON: number = 0.00001;\r\n    export const FLOATS_PER_VERTEX: number = 3;\r\n    export const FLOATS_PER_COLOR: number = 4;    \r\n}\r\n\r\nexport { Constants }","import { Constants } from \"./constants\";\r\nimport { Quaternion } from \"./quaternion\";\r\nimport { Vector3 } from \"./vector3\";\r\n\r\nclass Matrix4 extends Float32Array {\r\n    public constructor() {\r\n        super(16);\r\n        this[1] = 0;\r\n        this[2] = 0;\r\n        this[3] = 0;\r\n        this[4] = 0;\r\n        this[6] = 0;\r\n        this[7] = 0;\r\n        this[8] = 0;\r\n        this[9] = 0;\r\n        this[11] = 0;\r\n        this[12] = 0;\r\n        this[13] = 0;\r\n        this[14] = 0;\r\n        \r\n        this[0] = 1;\r\n        this[5] = 1;\r\n        this[10] = 1;\r\n        this[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * Copy matrix b into a.\r\n     * @param a The matrix to copy into.\r\n     * @param b The matrix to copy from.\r\n     */\r\n    public static copy(a: Matrix4, b: Matrix4): void {\r\n        a[0] = b[0];\r\n        a[1] = b[1];\r\n        a[2] = b[2];\r\n        a[3] = b[3];\r\n        a[4] = b[4];\r\n        a[5] = b[5];\r\n        a[6] = b[6];\r\n        a[7] = b[7];\r\n        a[8] = b[8];\r\n        a[9] = b[9];\r\n        a[10] = b[10];\r\n        a[11] = b[11];\r\n        a[12] = b[12];\r\n        a[13] = b[13];\r\n        a[14] = b[14];\r\n        a[15] = b[15];\r\n    }\r\n    \r\n    public static fromRotationTranslationScale(q: Quaternion, v: Vector3, s: Vector3): Matrix4 {\r\n        let out: Matrix4 = new Matrix4();\r\n        // Quaternion math\r\n        let x = q[0],\r\n            y = q[1],\r\n            z = q[2],\r\n            w = q[3];\r\n        let x2 = x + x;\r\n        let y2 = y + y;\r\n        let z2 = z + z;\r\n        let xx = x * x2;\r\n        let xy = x * y2;\r\n        let xz = x * z2;\r\n        let yy = y * y2;\r\n        let yz = y * z2;\r\n        let zz = z * z2;\r\n        let wx = w * x2;\r\n        let wy = w * y2;\r\n        let wz = w * z2;\r\n        let sx = s[0];\r\n        let sy = s[1];\r\n        let sz = s[2];\r\n        out[0] = (1 - (yy + zz)) * sx;\r\n        out[1] = (xy + wz) * sx;\r\n        out[2] = (xz - wy) * sx;\r\n        out[3] = 0;\r\n        out[4] = (xy - wz) * sy;\r\n        out[5] = (1 - (xx + zz)) * sy;\r\n        out[6] = (yz + wx) * sy;\r\n        out[7] = 0;\r\n        out[8] = (xz + wy) * sz;\r\n        out[9] = (yz - wx) * sz;\r\n        out[10] = (1 - (xx + yy)) * sz;\r\n        out[11] = 0;\r\n        out[12] = v[0];\r\n        out[13] = v[1];\r\n        out[14] = v[2];\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    public static multiply(a: Matrix4, b: Matrix4): Matrix4 {\r\n        let out: Matrix4 = new Matrix4();\r\n        let a00 = a[0],\r\n          a01 = a[1],\r\n          a02 = a[2],\r\n          a03 = a[3];\r\n        let a10 = a[4],\r\n          a11 = a[5],\r\n          a12 = a[6],\r\n          a13 = a[7];\r\n        let a20 = a[8],\r\n          a21 = a[9],\r\n          a22 = a[10],\r\n          a23 = a[11];\r\n        let a30 = a[12],\r\n          a31 = a[13],\r\n          a32 = a[14],\r\n          a33 = a[15];\r\n        // Cache only the current line of the second matrix\r\n        let b0 = b[0],\r\n          b1 = b[1],\r\n          b2 = b[2],\r\n          b3 = b[3];\r\n        out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        b0 = b[4];\r\n        b1 = b[5];\r\n        b2 = b[6];\r\n        b3 = b[7];\r\n        out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        b0 = b[8];\r\n        b1 = b[9];\r\n        b2 = b[10];\r\n        b3 = b[11];\r\n        out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        b0 = b[12];\r\n        b1 = b[13];\r\n        b2 = b[14];\r\n        b3 = b[15];\r\n        out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        return out;\r\n    }\r\n\r\n    public static perspective(fovy: number, aspect: number, near: number, far: number): Matrix4 {\r\n        let out: Matrix4 = new Matrix4();\r\n        let f: number = 1.0 / Math.tan(fovy / 2);\r\n        let nf: number;\r\n\r\n        out[0] = f / aspect;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = f;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[11] = -1;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[15] = 0;\r\n\r\n        if (far != null && far !== Infinity) {\r\n            nf = 1 / (near - far);\r\n            out[10] = (far + near) * nf;\r\n            out[14] = 2 * far * near * nf;\r\n        } else {\r\n            out[10] = -1;\r\n            out[14] = -2 * near;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    public static translate(a: Matrix4, v: Vector3): Matrix4 {\r\n        let out: Matrix4 = new Matrix4();\r\n        let x = v[0],\r\n            y = v[1],\r\n            z = v[2];\r\n      \r\n        let a00, a01, a02, a03;\r\n        let a10, a11, a12, a13;\r\n        let a20, a21, a22, a23;\r\n        \r\n        a00 = a[0];\r\n        a01 = a[1];\r\n        a02 = a[2];\r\n        a03 = a[3];\r\n        a10 = a[4];\r\n        a11 = a[5];\r\n        a12 = a[6];\r\n        a13 = a[7];\r\n        a20 = a[8];\r\n        a21 = a[9];\r\n        a22 = a[10];\r\n        a23 = a[11];\r\n        out[0] = a00;\r\n        out[1] = a01;\r\n        out[2] = a02;\r\n        out[3] = a03;\r\n        out[4] = a10;\r\n        out[5] = a11;\r\n        out[6] = a12;\r\n        out[7] = a13;\r\n        out[8] = a20;\r\n        out[9] = a21;\r\n        out[10] = a22;\r\n        out[11] = a23;\r\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n\r\n        return out;\r\n    }\r\n\r\n    public inverse(): Matrix4 {\r\n        let out: Matrix4 = new Matrix4();\r\n        let a00 = this[0],\r\n          a01 = this[1],\r\n          a02 = this[2],\r\n          a03 = this[3];\r\n        let a10 = this[4],\r\n          a11 = this[5],\r\n          a12 = this[6],\r\n          a13 = this[7];\r\n        let a20 = this[8],\r\n          a21 = this[9],\r\n          a22 = this[10],\r\n          a23 = this[11];\r\n        let a30 = this[12],\r\n          a31 = this[13],\r\n          a32 = this[14],\r\n          a33 = this[15];\r\n        let b00 = a00 * a11 - a01 * a10;\r\n        let b01 = a00 * a12 - a02 * a10;\r\n        let b02 = a00 * a13 - a03 * a10;\r\n        let b03 = a01 * a12 - a02 * a11;\r\n        let b04 = a01 * a13 - a03 * a11;\r\n        let b05 = a02 * a13 - a03 * a12;\r\n        let b06 = a20 * a31 - a21 * a30;\r\n        let b07 = a20 * a32 - a22 * a30;\r\n        let b08 = a20 * a33 - a23 * a30;\r\n        let b09 = a21 * a32 - a22 * a31;\r\n        let b10 = a21 * a33 - a23 * a31;\r\n        let b11 = a22 * a33 - a23 * a32;\r\n        // Calculate the determinant\r\n        let det =\r\n          b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n        if (!det) {\r\n          return null;\r\n        }\r\n        det = 1.0 / det;\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n        return out;\r\n    }\r\n\r\n    public translate(v: Vector3): void {\r\n        let x = v[0],\r\n            y = v[1],\r\n            z = v[2];\r\n            \r\n        this[12] = this[0] * x + this[4] * y + this[8] * z + this[12];\r\n        this[13] = this[1] * x + this[5] * y + this[9] * z + this[13];\r\n        this[14] = this[2] * x + this[6] * y + this[10] * z + this[14];\r\n        this[15] = this[3] * x + this[7] * y + this[11] * z + this[15];\r\n    }\r\n\r\n    public rotate(rad: number, axis: Vector3): void {\r\n        let x = axis[0],\r\n            y = axis[1],\r\n            z = axis[2];\r\n        let len = Math.hypot(x, y, z);\r\n        let s, c, t;\r\n        let a00, a01, a02, a03;\r\n        let a10, a11, a12, a13;\r\n        let a20, a21, a22, a23;\r\n        let b00, b01, b02;\r\n        let b10, b11, b12;\r\n        let b20, b21, b22;\r\n        if (len < Constants.EPSILON) {\r\n          return;\r\n        }\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n        s = Math.sin(rad);\r\n        c = Math.cos(rad);\r\n        t = 1 - c;\r\n        a00 = this[0];\r\n        a01 = this[1];\r\n        a02 = this[2];\r\n        a03 = this[3];\r\n        a10 = this[4];\r\n        a11 = this[5];\r\n        a12 = this[6];\r\n        a13 = this[7];\r\n        a20 = this[8];\r\n        a21 = this[9];\r\n        a22 = this[10];\r\n        a23 = this[11];\r\n        // Construct the elements of the rotation matrix\r\n        b00 = x * x * t + c;\r\n        b01 = y * x * t + z * s;\r\n        b02 = z * x * t - y * s;\r\n        b10 = x * y * t - z * s;\r\n        b11 = y * y * t + c;\r\n        b12 = z * y * t + x * s;\r\n        b20 = x * z * t + y * s;\r\n        b21 = y * z * t - x * s;\r\n        b22 = z * z * t + c;\r\n        // Perform rotation-specific matrix multiplication\r\n        this[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        this[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        this[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        this[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n        this[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        this[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        this[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        this[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n        this[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        this[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        this[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        this[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n    }\r\n}\r\n\r\nexport { Matrix4 }","class Quaternion extends Float32Array {\r\n    public constructor() {\r\n        super(new Float32Array(4));\r\n        this[0] = 0;\r\n        this[1] = 0;\r\n        this[2] = 0;\r\n        this[3] = 1;\r\n    }\r\n\r\n    public static copy(q: Quaternion): Quaternion {\r\n      let r: Quaternion = new Quaternion();\r\n      r[0] = q[0];\r\n      r[1] = q[1];\r\n      r[2] = q[2];\r\n      r[3] = q[3];\r\n      return r;\r\n    }\r\n\r\n    public static fromEuler(x: number, y: number, z: number): Quaternion {\r\n        let out: Quaternion = new Quaternion();\r\n        let halfToRad = (0.5 * Math.PI) / 180.0;\r\n        x *= halfToRad;\r\n        y *= halfToRad;\r\n        z *= halfToRad;\r\n        let sx = Math.sin(x);\r\n        let cx = Math.cos(x);\r\n        let sy = Math.sin(y);\r\n        let cy = Math.cos(y);\r\n        let sz = Math.sin(z);\r\n        let cz = Math.cos(z);\r\n        out[0] = sx * cy * cz - cx * sy * sz;\r\n        out[1] = cx * sy * cz + sx * cy * sz;\r\n        out[2] = cx * cy * sz - sx * sy * cz;\r\n        out[3] = cx * cy * cz + sx * sy * sz;\r\n        return out;\r\n    }\r\n\r\n    public static get identity(): Quaternion {\r\n        return new Quaternion();\r\n    }\r\n\r\n    public rotateX(radians: number): void {\r\n        radians *= 0.5;\r\n        let ax = this[0],\r\n          ay = this[1],\r\n          az = this[2],\r\n          aw = this[3];\r\n        let bx = Math.sin(radians),\r\n          bw = Math.cos(radians);\r\n        this[0] = ax * bw + aw * bx;\r\n        this[1] = ay * bw + az * bx;\r\n        this[2] = az * bw - ay * bx;\r\n        this[3] = aw * bw - ax * bx;\r\n    }\r\n\r\n    public rotateY(radians: number): void {\r\n        radians *= 0.5;\r\n        let ax = this[0],\r\n          ay = this[1],\r\n          az = this[2],\r\n          aw = this[3];\r\n        let by = Math.sin(radians),\r\n          bw = Math.cos(radians);\r\n        this[0] = ax * bw - az * by;\r\n        this[1] = ay * bw + aw * by;\r\n        this[2] = az * bw + ax * by;\r\n        this[3] = aw * bw - ay * by;\r\n    }\r\n\r\n    public rotateZ(radians: number): void {\r\n        radians *= 0.5;\r\n        let ax = this[0],\r\n          ay = this[1],\r\n          az = this[2],\r\n          aw = this[3];\r\n        let bz = Math.sin(radians),\r\n          bw = Math.cos(radians);\r\n        this[0] = ax * bw + ay * bz;\r\n        this[1] = ay * bw - ax * bz;\r\n        this[2] = az * bw + aw * bz;\r\n        this[3] = aw * bw - az * bz;\r\n    }\r\n}\r\n\r\nexport { Quaternion }","/**\r\n * A 3D vector. Some methods borrowed from glMatrix, at https://glmatrix.net/.\r\n */\r\nclass Vector3 extends Float32Array {\r\n    public constructor(x: number = 0, y: number = 0, z: number = 0) {\r\n        super(3);\r\n        this[0] = x;\r\n        this[1] = y;\r\n        this[2] = z;\r\n    }\r\n\r\n    public static add(a: Vector3, b: Vector3): Vector3 {\r\n        return new Vector3(a.x + b.x, a.y + b.y, a.z + b.z);\r\n    }\r\n\r\n    public static copy(a: Vector3): Vector3 {\r\n        return new Vector3(a.x, a.y, a.z);\r\n    }\r\n\r\n    public static distance(a: Vector3, b: Vector3): number {\r\n        return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2) + Math.pow(a.z - b.z, 2));\r\n    }\r\n\r\n    public static multiply(a: Vector3, b: number): Vector3 {\r\n        return new Vector3(a.x * b, a.y * b, a.z * b);\r\n    }\r\n\r\n    /**\r\n     * Return a vector with each component being a random number between 0 and 1, all scaled by the given scale factor.\r\n     * @param scale The number to multiply by for each component of the resultant vector.\r\n     * @returns A vector with randomized components.\r\n     */\r\n    public static random(scale: number = 1): Vector3 {\r\n        return new Vector3(Math.random() * scale, Math.random() * scale, Math.random() * scale);\r\n    }\r\n\r\n    public add(a: Vector3): void {\r\n        this.x += a.x;\r\n        this.y += a.y;\r\n        this.z += a.z;\r\n    }\r\n\r\n    public multiply(a: number): void {\r\n        this.x *= a;\r\n        this.y *= a;\r\n        this.z *= a;\r\n    }\r\n\r\n    /**\r\n     * Normalize this vector so that its magnitude is 1 (or 0 if this is the zero vector).\r\n     */\r\n    public normalize(): void {\r\n        let x = this[0];\r\n        let y = this[1];\r\n        let z = this[2];\r\n        let len = x * x + y * y + z * z;\r\n        if (len > 0) {\r\n          //TODO: evaluate use of glm_invsqrt here?\r\n          len = 1 / Math.sqrt(len);\r\n        }\r\n        this[0] = this[0] * len;\r\n        this[1] = this[1] * len;\r\n        this[2] = this[2] * len;\r\n    }\r\n\r\n    public subtract(a: Vector3): void {\r\n        this.x -= a.x;\r\n        this.y -= a.y;\r\n        this.z -= a.z;\r\n    }\r\n\r\n    /**\r\n     * (0, 0, 0)\r\n     */\r\n    public static get zero(): Vector3 {\r\n        return new Vector3(0, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * (1, 1, 1)\r\n     */\r\n    public static get one(): Vector3 {\r\n        return new Vector3(1, 1, 1);\r\n    }\r\n\r\n    /**\r\n     * (1, 0, 0)\r\n     */\r\n    public static get right(): Vector3 {\r\n        return new Vector3(1, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * (0, 1, 0)\r\n     */\r\n    public static get up(): Vector3 {\r\n        return new Vector3(0, 1, 0);\r\n    }\r\n\r\n    /**\r\n     * (0, 0, 1)\r\n     */\r\n    public static get forward(): Vector3 {\r\n        return new Vector3(0, 0, 1);\r\n    }\r\n\r\n    public get magnitude(): number {\r\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2) + Math.pow(this.z, 2));\r\n    }\r\n\r\n    public get x(): number {\r\n        return this[0];\r\n    }\r\n\r\n    public set x(dx: number) {\r\n        this[0] = dx;\r\n    }\r\n\r\n    public get y(): number {\r\n        return this[1];\r\n    }\r\n\r\n    public set y(dy: number) {\r\n        this[1] = dy;\r\n    }\r\n\r\n    public get z(): number {\r\n        return this[2];\r\n    }\r\n\r\n    public set z(dz: number) {\r\n        this[2] = dz;\r\n    }\r\n}\r\n\r\nexport { Vector3 }","import { Component } from \"./component\";\r\nimport { RenderState } from \"./render_state\";\r\nimport { SpatialObject } from \"./spatial_object\";\r\n\r\n\r\nclass Entity extends SpatialObject {\r\n    private components: Array<Component> = [];\r\n\r\n    public constructor(components: Array<Component> = []) {\r\n        super();\r\n        this.components = components;\r\n    }\r\n\r\n    public update(delta: number): void {\r\n        this.components.forEach(component => {\r\n            component.update(delta, this);\r\n        });\r\n    }\r\n\r\n    public render(gl: WebGL2RenderingContext, renderState: RenderState): void {\r\n        this.components.forEach(component => {\r\n            component.render(gl, renderState, this);\r\n        });\r\n    }\r\n\r\n    public addComponent(component: Component): void {\r\n        this.components.push(component);\r\n    }\r\n}\r\n\r\nexport { Entity }","import { Matrix4 } from \"./matrix4\";\r\nimport { Quaternion } from \"./quaternion\";\r\nimport { Vector3 } from \"./vector3\";\r\n\r\n/**\r\n * An object that exists within a 3D space.\r\n */\r\nabstract class SpatialObject {\r\n    public rotation: Quaternion;\r\n    public translation: Vector3;\r\n    public scale: Vector3;\r\n\r\n    private parentObj: SpatialObject;\r\n\r\n    public constructor() {\r\n        this.rotation = Quaternion.identity;\r\n        this.translation = Vector3.zero;\r\n        this.scale = Vector3.one;\r\n    }\r\n\r\n    public translate(a: Vector3): void {\r\n        this.translation.add(a);\r\n    }\r\n\r\n    public rotateX(radians: number): void {\r\n        this.rotation.rotateX(radians);\r\n    }\r\n\r\n    public rotateY(radians: number): void {\r\n        this.rotation.rotateY(radians);\r\n    }\r\n\r\n    public rotateZ(radians: number): void {\r\n        this.rotation.rotateZ(radians);\r\n    }\r\n\r\n    public get transformation(): Matrix4 {\r\n        if (this.parentObj == null) {\r\n            return Matrix4.fromRotationTranslationScale(this.rotation, this.translation, this.scale);\r\n        } else {\r\n            return Matrix4.multiply(this.parentObj.transformation,\r\n                Matrix4.fromRotationTranslationScale(this.rotation, this.translation, this.scale));\r\n        }\r\n    }\r\n\r\n    public set parent(parentObj: SpatialObject) {\r\n        this.parentObj = parentObj;\r\n    }\r\n}\r\n\r\nexport { SpatialObject };\r\n\r\n","import { Entity } from \"./entity\";\r\nimport { Matrix4 } from \"./matrix4\";\r\n\r\nclass Camera extends Entity {\r\n    // Projection info\r\n    private fovy: number;\r\n    private aspect: number;\r\n    private near: number;\r\n    private far: number;\r\n\r\n    public constructor(fovy: number, aspect: number, near: number, far: number) {\r\n        super();\r\n        this.fovy = fovy;\r\n        this.aspect = aspect;\r\n        this.near = near;\r\n        this.far = far;\r\n    }\r\n\r\n    public static create(gl: WebGL2RenderingContext): Camera {\r\n        const fovy: number = (45 * Math.PI) / 180;\r\n        const aspect: number = gl.canvas.width / gl.canvas.height;\r\n        const near: number = 0.1;\r\n        const far: number = 100.0;\r\n        \r\n        return new Camera(fovy, aspect, near, far);\r\n    }\r\n\r\n    public get view(): Matrix4 {\r\n        return this.transformation.inverse();\r\n    }\r\n \r\n    public get projection(): Matrix4 {\r\n        return Matrix4.perspective(this.fovy, this.aspect, this.near, this.far);\r\n    }\r\n\r\n    public get viewProjection(): Matrix4 {\r\n        return Matrix4.multiply(this.projection, this.view);\r\n    }\r\n}\r\n\r\nexport { Camera };\r\n","class Color {\r\n    private r: number;\r\n    private g: number;\r\n    private b: number;\r\n    private a: number;\r\n\r\n    public constructor(r: number, g: number, b: number, a: number = 1.0) {\r\n        this.red = r;\r\n        this.green = g;\r\n        this.blue = b;\r\n        this.alpha = a;\r\n    }\r\n\r\n    public static fromInt8(r: number, g: number, b: number): Color {\r\n        return new Color(r / 255, g / 255, b / 255, 1);\r\n    }\r\n\r\n    public static get red(): Color {\r\n        return new Color(1, 0, 0, 1);\r\n    }\r\n\r\n    public static get green(): Color {\r\n        return new Color(0, 1, 0, 1);\r\n    }\r\n\r\n    public static get blue(): Color {\r\n        return new Color(0, 0, 1, 1);\r\n    }\r\n\r\n    public static get black(): Color {\r\n        return new Color(0, 0, 0, 1);\r\n    }\r\n\r\n    public static lerp(a: Color, b: Color, t: number): Color {\r\n        t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n        return new Color(this.lerpNum(a.r, b.r, t), this.lerpNum(a.g, b.g, t), this.lerpNum(a.b, b.b, t),\r\n            this.lerpNum(a.a, b.a, t));\r\n    }\r\n\r\n    public get red(): number {\r\n        return this.r;\r\n    }\r\n\r\n    public set red(r: number) {\r\n        r = this.clamp(\"Red\", r);\r\n        this.r = r;\r\n    }\r\n\r\n    public get green(): number {\r\n        return this.g;\r\n    }\r\n\r\n    public set green(g: number) {\r\n        g = this.clamp(\"Green\", g);\r\n        this.g = g;\r\n    }\r\n\r\n    public get blue(): number {\r\n        return this.b;\r\n    }\r\n\r\n    public set blue(b: number) {\r\n        b = this.clamp(\"Blue\", b);\r\n        this.b = b;\r\n    }\r\n\r\n    public get alpha(): number {\r\n        return this.a;\r\n    }\r\n\r\n    public set alpha(a: number) {\r\n        a = this.clamp(\"Alpha\", a);\r\n        this.a = a;\r\n    }\r\n\r\n    private static lerpNum(a: number, b: number, t: number): number {\r\n        return (1 - t) * a + t * b;\r\n    }\r\n\r\n    private clamp(fieldName: string, value: number): number {\r\n        if (value > 1.0) {\r\n            console.warn(`${fieldName} component of color exceeds 1.0; value was clamped.`);\r\n            value = 1.0;\r\n        } else if (value < 0) {\r\n            console.warn(`${fieldName} component of color is below 0; value was clamped.`);\r\n            value = 0;\r\n        }\r\n        return value;\r\n    }\r\n}\r\n\r\nexport { Color }","function createShader(gl: WebGL2RenderingContext, type: number, source: string): WebGLShader {\r\n    let shader: WebGLShader = gl.createShader(type);\r\n\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        alert(gl.getShaderInfoLog(shader));\r\n        return null;\r\n    }\r\n\r\n    return shader;\r\n}\r\n\r\n/**\r\n * \r\n * @param gl The WebGL context.\r\n * @param fragmentShaderSource The source code of the fragment shader.\r\n * @param vertexShaderSource The source code of the vertex shader.\r\n * @returns A WebGL program containing the compiled vertex and fragment shaders.\r\n */\r\nfunction initShaderProgram(gl: WebGL2RenderingContext, fragmentShaderSource: string, vertexShaderSource: string):\r\n    WebGLProgram {\r\n    let shaderProgram = gl.createProgram();\r\n\r\n    let fragmentShader: WebGLShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\r\n    let vertexShader: WebGLShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\r\n\r\n    gl.attachShader(shaderProgram, vertexShader);\r\n    gl.attachShader(shaderProgram, fragmentShader);\r\n    gl.linkProgram(shaderProgram);\r\n\r\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n        alert(\"Could not initialise shaders\");\r\n    }\r\n\r\n    gl.useProgram(shaderProgram);\r\n\r\n    return shaderProgram;\r\n}\r\n\r\nexport { initShaderProgram }","import { Camera } from \"./camera\";\r\nimport { Color } from \"./color\";\r\nimport { initShaderProgram } from \"./shader_setup\";\r\n\r\nclass RenderState {\r\n    // Shader attributes\r\n    public readonly vertexPositionAttribute: number;\r\n    public readonly vertexColorAttribute: number;\r\n    \r\n    // Uniform locations\r\n    public readonly uniformModelMatrix: WebGLUniformLocation;\r\n    private uniformViewProjectionMatrix: WebGLUniformLocation;\r\n    \r\n    // Internal state\r\n    private mainCamera: Camera;\r\n    private shaderProgram: WebGLProgram;\r\n\r\n    private constructor(gl: WebGL2RenderingContext, fragmentShaderSource: string, vertexShaderSource: string,\r\n        clearColor: Color = Color.black) {\r\n        this.shaderProgram = initShaderProgram(gl, fragmentShaderSource, vertexShaderSource);\r\n\r\n        // Initialize vertex attributes\r\n        this.vertexPositionAttribute = gl.getAttribLocation(this.shaderProgram, \"aVertexPosition\");\r\n        gl.enableVertexAttribArray(this.vertexPositionAttribute); \r\n        this.vertexColorAttribute = gl.getAttribLocation(this.shaderProgram, \"aVertexColor\");\r\n        gl.enableVertexAttribArray(this.vertexColorAttribute);\r\n        \r\n        // Initialize the shader uniforms\r\n        this.uniformModelMatrix = gl.getUniformLocation(this.shaderProgram, \"uModelMatrix\");\r\n        this.uniformViewProjectionMatrix = gl.getUniformLocation(this.shaderProgram, \"uViewProjectionMatrix\");\r\n    \r\n        // Set the clear color\r\n        gl.clearColor(clearColor.red, clearColor.green, clearColor.blue, clearColor.alpha);\r\n    }\r\n\r\n    public static create(gl: WebGL2RenderingContext, fragmentShaderSource: string, vertexShaderSource: string,\r\n        clearColor: Color = Color.black) {\r\n        let camera: Camera = Camera.create(gl);\r\n        let renderState: RenderState = new RenderState(gl, fragmentShaderSource, vertexShaderSource, clearColor);\r\n        renderState.mainCamera = camera;\r\n        return renderState;\r\n    }\r\n\r\n    public Begin(gl: WebGL2RenderingContext): void {\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        gl.clearDepth(1.0);\r\n        gl.enable(gl.DEPTH_TEST);\r\n        gl.depthFunc(gl.LEQUAL);\r\n    \r\n        // Set the shader uniforms\r\n        gl.useProgram(this.shaderProgram);\r\n        gl.uniformMatrix4fv(this.uniformViewProjectionMatrix, false, this.camera.viewProjection);\r\n    }\r\n\r\n    public get camera(): Camera {\r\n        return this.mainCamera;\r\n    }\r\n}\r\n\r\nexport { RenderState };\r\n","import { Constants } from \"./constants\";\r\nimport { Entity } from \"./entity\";\r\nimport { Input } from \"./input\";\r\nimport { Quaternion } from \"./quaternion\";\r\nimport { RenderState } from \"./render_state\";\r\nimport { Vector3 } from \"./vector3\";\r\n\r\nabstract class Component {\r\n    public update(delta: number, entity: Entity): void {\r\n    }\r\n\r\n    public render(gl: WebGL2RenderingContext, renderState: RenderState, entity: Entity): void {\r\n    }\r\n}\r\n\r\nclass Primitive extends Component {\r\n    private glDrawMode: number;\r\n    private vertexBuffer: WebGLBuffer;\r\n    private colorBuffer: WebGLBuffer;\r\n    private indexBuffer: WebGLBuffer;\r\n    private vertexCount: number;\r\n    private wireframeEnabled: boolean;\r\n\r\n    private constructor(drawMode: number, vertexBuffer: WebGLBuffer, colorBuffer: WebGLBuffer, indexBuffer: WebGLBuffer,\r\n        vertexCount: number) {\r\n        super();\r\n        this.glDrawMode = drawMode;\r\n        this.vertexBuffer = vertexBuffer;\r\n        this.colorBuffer = colorBuffer;\r\n        this.indexBuffer = indexBuffer;\r\n        this.vertexCount = vertexCount;\r\n    }\r\n\r\n    public static create(gl: WebGL2RenderingContext, vertices: Array<number>, colors: Array<number>,\r\n        indices: Array<number>): Primitive {\r\n        if (vertices.length / Constants.FLOATS_PER_VERTEX !== colors.length / Constants.FLOATS_PER_COLOR) {\r\n            console.error(\"Number of vertices not equal to number of colors\");\r\n            return null;\r\n        }\r\n\r\n        // Assemble the vertex buffer\r\n        const vertexBuffer: WebGLBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\r\n\r\n        // Assemble the color buffer\r\n        const colorBuffer: WebGLBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\r\n\r\n        // Assemble the index buffer\r\n        const indexBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n        let component: Primitive\r\n            = new Primitive(gl.TRIANGLES, vertexBuffer, colorBuffer, indexBuffer, indices.length);\r\n        return  component;\r\n    }\r\n\r\n    public render(gl: WebGL2RenderingContext, renderState: RenderState, entity: Entity): void {\r\n        // Set the position attribute\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.vertexAttribPointer(renderState.vertexPositionAttribute, Constants.FLOATS_PER_VERTEX, gl.FLOAT, false, 0, 0);\r\n        gl.enableVertexAttribArray(renderState.vertexPositionAttribute);\r\n\r\n        // Set the color attribute\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\r\n        gl.vertexAttribPointer(renderState.vertexColorAttribute, Constants.FLOATS_PER_COLOR, gl.FLOAT, false, 0, 0);\r\n        gl.enableVertexAttribArray(renderState.vertexColorAttribute);\r\n\r\n        // Bind the index buffer (isn't associated with an attribute)\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n\r\n        // Set any uniforms associated with this object\r\n        gl.uniformMatrix4fv(renderState.uniformModelMatrix, false, entity.transformation);\r\n\r\n        // Draw the object\r\n        if (this.wireframeEnabled) {\r\n            gl.drawElements(gl.LINE_STRIP, this.vertexCount, gl.UNSIGNED_SHORT, 0);\r\n        } else {\r\n            gl.drawElements(this.glDrawMode, this.vertexCount, gl.UNSIGNED_SHORT, 0);\r\n        }\r\n    }\r\n\r\n    public update(delta: number, entity: Entity): void {\r\n        if (Input.isActionDown(\"toggleWireframe\") && !Input.isActionDown(\"shift\")) {\r\n            this.wireframeEnabled = true;\r\n        }\r\n        if (Input.isActionDown(\"toggleWireframe\") && Input.isActionDown(\"shift\")) {\r\n            this.wireframeEnabled = false;\r\n        }\r\n        if (Input.isActionDown(\"reset\")) {\r\n            this.wireframeEnabled = false;\r\n        }\r\n    }\r\n}\r\n\r\nclass Spinner extends Component {\r\n    private xSpeed: number;\r\n    private ySpeed: number;\r\n    private zSpeed: number;\r\n    \r\n    public constructor(xSpeed: number, ySpeed: number, zSpeed: number) {\r\n        super();\r\n        this.xSpeed = xSpeed;\r\n        this.ySpeed = ySpeed;\r\n        this.zSpeed = zSpeed;\r\n    }\r\n\r\n    public update(delta: number, entity: Entity): void {\r\n        entity.rotateX(this.xSpeed * delta);\r\n        entity.rotateY(this.ySpeed * delta);\r\n        entity.rotateZ(this.zSpeed * delta);\r\n    }\r\n}\r\n\r\nclass Bobber extends Component {\r\n    private time: number;\r\n    private xSpeed: number;\r\n    private ySpeed: number;\r\n    private xInitial: number;\r\n    private yInitial: number;\r\n    private amplitude: number;\r\n    \r\n    public constructor(xSpeed: number, ySpeed: number, xInitial: number, yInitial: number, amplitude: number,\r\n        phase: number = 0) {\r\n        super();\r\n        this.xSpeed = xSpeed;\r\n        this.ySpeed = ySpeed;\r\n        this.xInitial = xInitial;\r\n        this.yInitial = yInitial;\r\n        this.amplitude = amplitude;\r\n        this.time = phase;\r\n    }\r\n\r\n    public update(delta: number, entity: Entity): void {\r\n        this.time += delta;\r\n        entity.translation = new Vector3(\r\n            this.xInitial + this.amplitude * Math.sin(this.time * this.xSpeed),\r\n            this.yInitial + this.amplitude * Math.sin(this.time * this.ySpeed),\r\n            entity.translation.z);\r\n    }\r\n}\r\n\r\nclass RotationController extends Component {\r\n    private yawSpeed: number;\r\n    private pitchSpeed: number;\r\n    private rollSpeed: number;\r\n    private initialRotation: Quaternion;\r\n\r\n    public constructor(yawSpeed: number, pitchSpeed: number, rollSpeed: number, initialRotation: Quaternion) {\r\n        super();\r\n        this.yawSpeed = yawSpeed;\r\n        this.pitchSpeed = pitchSpeed;\r\n        this.rollSpeed = rollSpeed;\r\n        this.initialRotation = Quaternion.copy(initialRotation);\r\n    }\r\n\r\n    public update(delta: number, entity: Entity): void {\r\n        if (Input.isActionDown(\"yaw\") && Input.isActionDown(\"shift\")) {\r\n            entity.rotateX(this.yawSpeed * delta);\r\n        }\r\n        else if (Input.isActionDown(\"yaw\")) {\r\n            entity.rotateX(-this.yawSpeed * delta);\r\n        }\r\n        if (Input.isActionDown(\"pitch\") && Input.isActionDown(\"shift\")) {\r\n            entity.rotateY(this.pitchSpeed * delta);\r\n        }\r\n        else if (Input.isActionDown(\"pitch\")) {\r\n            entity.rotateY(-this.pitchSpeed * delta);\r\n        }\r\n        if (Input.isActionDown(\"roll\") && Input.isActionDown(\"shift\")) {\r\n            entity.rotateZ(this.rollSpeed * delta);\r\n        }\r\n        else if (Input.isActionDown(\"roll\")) {\r\n            entity.rotateZ(-this.rollSpeed * delta);\r\n        }\r\n\r\n        if (Input.isActionDown(\"reset\")) {\r\n            entity.rotation = Quaternion.copy(this.initialRotation);\r\n        }\r\n    }\r\n}\r\n\r\nclass MovementController extends Component {\r\n    private speed: number;\r\n    private initialTranslation: Vector3;\r\n\r\n    public constructor(speed: number, initialTranslation: Vector3) {\r\n        super();\r\n        this.speed = speed;\r\n        this.initialTranslation = Vector3.copy(initialTranslation);\r\n    }\r\n\r\n    public update(delta: number, entity: Entity): void {\r\n        let direction: Vector3 = Vector3.zero;\r\n        if (Input.isActionDown(\"moveForward\")) {\r\n            direction.subtract(Vector3.forward);\r\n        }\r\n        if (Input.isActionDown(\"moveBack\")) {\r\n            direction.add(Vector3.forward);\r\n        }\r\n        if (Input.isActionDown(\"moveLeft\")) {\r\n            direction.subtract(Vector3.right);\r\n        }\r\n        if (Input.isActionDown(\"moveRight\")) {\r\n            direction.add(Vector3.right);\r\n        }\r\n        direction.normalize();\r\n        entity.translate(Vector3.multiply(direction, delta * this.speed));\r\n\r\n        if (Input.isActionDown(\"reset\")) {\r\n            entity.translation = Vector3.copy(this.initialTranslation);\r\n        }\r\n    }\r\n}\r\n\r\nexport { Component, Primitive, Spinner, Bobber, RotationController, MovementController };\r\n","///////////////////////////////////////////////////////////////////////////////\r\n// Cylinder.js\r\n// ===========\r\n// With default constructor, it creates a cylinder with baseRadius=topRadius=1,\r\n// height=1, sectorCount=36, stackCount=1, smooth=true.\r\n// The minimum # of sectors is 3 and stacks is 1.\r\n//\r\n// Example of OpenGL drawing calls (interleaved mode)\r\n// ===============================\r\n//  gl.bindBuffer(gl.ARRAY_BUFFER, cylinder.vboVertex);\r\n//  gl.vertexAttribPointer(gl.program.attribute.vertexPosition, 3, gl.FLOAT, false, 32, 0);\r\n//  gl.vertexAttribPointer(gl.program.attribute.vertexNormal, 3, gl.FLOAT, false, 32, 12);\r\n//  gl.vertexAttribPointer(gl.program.attribute.vertexTexCoord, 2, gl.FLOAT, false, 32, 24);\r\n//  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, cylinder.vboIndex);\r\n//  gl.drawElements(gl.TRIANGLES, cylinder.getIndexCount(), gl.UNSIGNED_SHORT, 0);\r\n//\r\n//  AUTHOR: Song Ho Ahn (song.ahn@gmail.com)\r\n// CREATED: 2020-03-08\r\n// UPDATED: 2021-10-07\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nclass Cylinder {\r\n    constructor(gl, baseR = 1, topR = 1, h = 1, sectors = 36, stacks = 1, smooth = true) {\r\n        this.gl = gl;\r\n        if (!gl)\r\n            log(\"[WARNING] Cylinder.contructor requires GL context as a param.\");\r\n\r\n        this.baseRadius = baseR;\r\n        this.topRadius = topR;\r\n        this.height = h;\r\n        this.sectorCount = sectors;\r\n        this.stackCount = stacks;\r\n        this.smooth = smooth;\r\n        this.unitCircleVertices = [];\r\n        this.vertices = [];\r\n        this.normals = [];\r\n        this.texCoords = [];\r\n        this.indices = [];\r\n        this.interleavedVertices = [];\r\n        this.stride = 32; // stride for interleaved vertices, always=32\r\n        if (gl) {\r\n            this.vboVertex = gl.createBuffer();\r\n            this.vboIndex = gl.createBuffer();\r\n        }\r\n\r\n        this.buildUnitCircleVertices();\r\n        if (this.smooth)\r\n            this.buildVerticesSmooth();\r\n\r\n        else\r\n            this.buildVerticesFlat();\r\n    }\r\n    set(br, tr, h, se, st, sm) {\r\n        this.baseRadius = br;\r\n        this.topRadius = tr;\r\n        this.height = h;\r\n        this.sectorCount = se;\r\n        this.stackCount = st;\r\n        this.smooth = sm;\r\n        this.buildUnitCircleVertices();\r\n        if (this.smooth)\r\n            this.buildVerticesSmooth();\r\n\r\n        else\r\n            this.buildVerticesFlat();\r\n        return this;\r\n    }\r\n    setBaseRadius(r) {\r\n        if (this.baseRadius != r)\r\n            this.set(r, this.topRadius, this.height, this.sectorCount, this.stackCount, this.smooth);\r\n        return this;\r\n    }\r\n    setTopRadius(r) {\r\n        if (this.topRadius != r)\r\n            this.set(this.baseRadius, r, this.height, this.sectorCount, this.stackCount, this.smooth);\r\n        return this;\r\n    }\r\n    setHeight(h) {\r\n        if (this.height != h)\r\n            this.set(this.baseRadius, this.topRadius, h, this.sectorCount, this.stackCount, this.smooth);\r\n        return this;\r\n    }\r\n    setSectorCount(s) {\r\n        if (this.sectorCount != s)\r\n            this.set(this.baseRadius, this.topRadius, this.height, s, this.stackCount, this.smooth);\r\n        return this;\r\n    }\r\n    setStackCount(s) {\r\n        if (this.stackCount != s)\r\n            this.set(this.baseRadius, this.topRadius, this.height, this.sectorCount, s, this.smooth);\r\n        return this;\r\n    }\r\n    setSmooth(s) {\r\n        if (this.smooth != s) {\r\n            this.smooth = s;\r\n            if (this.smooth)\r\n                this.buildVerticesSmooth();\r\n\r\n            else\r\n                this.buildVerticesFlat();\r\n        }\r\n        return this;\r\n    }\r\n    getTriangleCount() {\r\n        return this.getIndexCount() / 3;\r\n    }\r\n    getIndexCount() {\r\n        return this.indices.length;\r\n    }\r\n    getVertexCount() {\r\n        return this.vertices.length / 3;\r\n    }\r\n    getNormalCount() {\r\n        return this.normals.length / 3;\r\n    }\r\n    getTexCoordCount() {\r\n        return this.texCoords.length / 2;\r\n    }\r\n    toString() {\r\n        return \"===== Cylinder =====\\n\" +\r\n            \"   Base Radius: \" + this.baseRadius + \"\\n\" +\r\n            \"    Top Radius: \" + this.topRadius + \"\\n\" +\r\n            \"        Height: \" + this.height + \"\\n\" +\r\n            \"  Sector Count: \" + this.sectorCount + \"\\n\" +\r\n            \"   Stack Count: \" + this.stackCount + \"\\n\" +\r\n            \" Smooth Shader: \" + this.smooth + \"\\n\" +\r\n            \"Triangle Count: \" + this.getTriangleCount() + \"\\n\" +\r\n            \"   Index Count: \" + this.getIndexCount() + \"\\n\" +\r\n            \"  Vertex Count: \" + this.getVertexCount() + \"\\n\" +\r\n            \"  Normal Count: \" + this.getNormalCount() + \"\\n\" +\r\n            \"TexCoord Count: \" + this.getTexCoordCount() + \"\\n\";\r\n    }\r\n    clearArrays() {\r\n        this.vertices.length = 0;\r\n        this.normals.length = 0;\r\n        this.texCoords.length = 0;\r\n        this.indices.length = 0;\r\n        this.interleavedVertices.length = 0;\r\n    }\r\n    resizeArraysSmooth() {\r\n        this.clearArrays();\r\n        let sideCount = (this.sectorCount + 1) * (this.stackCount + 1);\r\n        let baseCount = (this.sectorCount + 1) * 2; // base + top\r\n        this.vertices = new Float32Array(3 * (sideCount + baseCount));\r\n        this.normals = new Float32Array(3 * (sideCount + baseCount));\r\n        this.texCoords = new Float32Array(2 * (sideCount + baseCount));\r\n        this.indices = new Uint16Array(6 * this.sectorCount * this.stackCount + 2 * 3 * this.sectorCount);\r\n    }\r\n    resizeArraysFlat() {\r\n        this.clearArrays();\r\n        let sideCount = this.sectorCount * 4 * this.stackCount;\r\n        let baseCount = (this.sectorCount + 1) * 2; // base + top\r\n        this.vertices = new Float32Array(3 * (sideCount + baseCount));\r\n        this.normals = new Float32Array(3 * (sideCount + baseCount));\r\n        this.texCoords = new Float32Array(2 * (sideCount + baseCount));\r\n        this.indices = new Uint16Array(6 * this.sectorCount * this.stackCount + 2 * 3 * this.sectorCount);\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // create vertices for unit circles\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    buildUnitCircleVertices() {\r\n        let sectorStep = 2 * Math.PI / this.sectorCount;\r\n        let sectorAngle = 0;\r\n        this.unitCircleVertices.length = 0; // clear prev array\r\n        this.unitCircleVertices = new Float32Array((this.sectorCount + 1) * 3);\r\n        for (let i = 0, j = 0; i <= this.sectorCount; ++i, j += 3) {\r\n            sectorAngle = i * sectorStep;\r\n            this.unitCircleVertices[j] = Math.cos(sectorAngle);\r\n            this.unitCircleVertices[j + 1] = Math.sin(sectorAngle);\r\n            this.unitCircleVertices[j + 2] = 0;\r\n        }\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // generate vertices of cylinder with smooth shading\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    buildVerticesSmooth() {\r\n        // resize typed arrays\r\n        this.resizeArraysSmooth();\r\n\r\n        let x, y, z, r, s, t, i, j, k, k1, k2;\r\n        let ii = 0;\r\n        let jj = 0;\r\n        let kk = 0;\r\n        let sideNormals = this.getSideNormals();\r\n\r\n        // put vertices of side cylinder to array by scaling unit circle\r\n        for (i = 0; i <= this.stackCount; ++i) {\r\n            z = -(this.height * 0.5) + i / this.stackCount * this.height;\r\n            r = this.baseRadius + i / this.stackCount * (this.topRadius - this.baseRadius); // interpolate radius\r\n            t = 1.0 - i / this.stackCount; // top-to-bottom\r\n\r\n            for (j = 0, k = 0; j <= this.sectorCount; ++j, k += 3) {\r\n                x = this.unitCircleVertices[k];\r\n                y = this.unitCircleVertices[k + 1];\r\n                this.addVertex(ii, x * r, y * r, z);\r\n                this.addNormal(ii, sideNormals[k], sideNormals[k + 1], sideNormals[k + 2]);\r\n                s = j / this.sectorCount;\r\n                this.addTexCoord(jj, s, t);\r\n                // next\r\n                ii += 3;\r\n                jj += 2;\r\n            }\r\n        }\r\n\r\n        // remember where the base.top vertices start\r\n        let baseVertexIndex = ii / 3;\r\n\r\n        // put vertices of base of cylinder\r\n        z = -this.height * 0.5;\r\n        this.addVertex(ii, 0, 0, z);\r\n        this.addNormal(ii, 0, 0, -1);\r\n        this.addTexCoord(jj, 0.5, 0.5);\r\n        ii += 3;\r\n        jj += 2;\r\n        for (i = 0, j = 0; i < this.sectorCount; ++i, j += 3) {\r\n            x = this.unitCircleVertices[j];\r\n            y = this.unitCircleVertices[j + 1];\r\n            this.addVertex(ii, x * this.baseRadius, y * this.baseRadius, z);\r\n            this.addNormal(ii, 0, 0, -1);\r\n            this.addTexCoord(jj, -x * 0.5 + 0.5, -y * 0.5 + 0.5); // flip horizontal\r\n            ii += 3;\r\n            jj += 2;\r\n        }\r\n\r\n        // remember where the base vertices start\r\n        let topVertexIndex = ii / 3;\r\n\r\n        // put vertices of top of cylinder\r\n        z = this.height * 0.5;\r\n        this.addVertex(ii, 0, 0, z);\r\n        this.addNormal(ii, 0, 0, 1);\r\n        this.addTexCoord(jj, 0.5, 0.5);\r\n        ii += 3;\r\n        jj += 2;\r\n        for (i = 0, j = 0; i < this.sectorCount; ++i, j += 3) {\r\n            x = this.unitCircleVertices[j];\r\n            y = this.unitCircleVertices[j + 1];\r\n            this.addVertex(ii, x * this.topRadius, y * this.topRadius, z);\r\n            this.addNormal(ii, 0, 0, 1);\r\n            this.addTexCoord(jj, x * 0.5 + 0.5, -y * 0.5 + 0.5);\r\n            ii += 3;\r\n            jj += 2;\r\n        }\r\n\r\n        // put indices for sides\r\n        for (i = 0; i < this.stackCount; ++i) {\r\n            k1 = i * (this.sectorCount + 1); // bebinning of current stack\r\n            k2 = k1 + this.sectorCount + 1; // beginning of next stack\r\n\r\n            for (j = 0; j < this.sectorCount; ++j, ++k1, ++k2) {\r\n                // 2 trianles per sector\r\n                this.addIndices(kk, k1, k1 + 1, k2);\r\n                this.addIndices(kk + 3, k2, k1 + 1, k2 + 1);\r\n                kk += 6;\r\n            }\r\n        }\r\n\r\n        // put indices for base\r\n        for (i = 0, k = baseVertexIndex + 1; i < this.sectorCount; ++i, ++k) {\r\n            if (i < (this.sectorCount - 1))\r\n                this.addIndices(kk, baseVertexIndex, k + 1, k);\r\n            else // last triangle\r\n                this.addIndices(kk, baseVertexIndex, baseVertexIndex + 1, k);\r\n            kk += 3;\r\n        }\r\n\r\n        for (i = 0, k = topVertexIndex + 1; i < this.sectorCount; ++i, ++k) {\r\n            if (i < (this.sectorCount - 1))\r\n                this.addIndices(kk, topVertexIndex, k, k + 1);\r\n\r\n            else\r\n                this.addIndices(kk, topVertexIndex, k, topVertexIndex + 1);\r\n            kk += 3;\r\n        }\r\n\r\n        // generate interleaved vertex array as well\r\n        this.buildInterleavedVertices();\r\n        this.buildVbos();\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // generate vertices of cylinder with flat shading\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    buildVerticesFlat() {\r\n        let i, j, k, x, y, z, r, t;\r\n        let tmpVertices = [];\r\n        let vertex = {}; // to store (x,y,z,s,t)\r\n        for (i = 0, m = 0; i <= this.stackCount; ++i) {\r\n            z = -(this.height * 0.5) + i / this.stackCount * this.height;\r\n            r = this.baseRadius + i / this.stackCount * (this.topRadius - this.baseRadius);\r\n            t = 1.0 - i / this.stackCount;\r\n            for (j = 0, k = 0, l = 0; j <= this.sectorCount; ++j, k += 3, l += 2) {\r\n                x = this.unitCircleVertices[k];\r\n                y = this.unitCircleVertices[k + 1];\r\n                vertex = { x: x * r, y: y * r, z: z, s: j / this.sectorCount, t: t };\r\n                tmpVertices.push(vertex);\r\n            }\r\n        }\r\n\r\n        // resize typed arrays\r\n        this.resizeArraysFlat();\r\n\r\n        let v1, v2, v3, v4, n, index, ii, jj, kk;\r\n        ii = jj = kk = index = 0;\r\n        // v2-v4 <= stack at i+1\r\n        // | \\ |\r\n        // v1-v3 <= stack at i\r\n        for (i = 0; i < this.stackCount; ++i) {\r\n            vi1 = i * (this.sectorCount + 1);\r\n            vi2 = (i + 1) * (this.sectorCount + 1);\r\n\r\n            for (j = 0; j < this.sectorCount; ++j, ++vi1, ++vi2) {\r\n                v1 = tmpVertices[vi1];\r\n                v2 = tmpVertices[vi2];\r\n                v3 = tmpVertices[vi1 + 1];\r\n                v4 = tmpVertices[vi2 + 1];\r\n\r\n                // add vertices/normals/texCoords of a quad: v1-v2-v3-v4\r\n                this.addVertex(ii, v1.x, v1.y, v1.z);\r\n                this.addVertex(ii + 3, v2.x, v2.y, v2.z);\r\n                this.addVertex(ii + 6, v3.x, v3.y, v3.z);\r\n                this.addVertex(ii + 9, v4.x, v4.y, v4.z);\r\n                this.addTexCoord(jj, v1.s, v1.t);\r\n                this.addTexCoord(jj + 2, v2.s, v2.t);\r\n                this.addTexCoord(jj + 4, v3.s, v3.t);\r\n                this.addTexCoord(jj + 6, v4.s, v4.t);\r\n\r\n                // normal for v1-v3-v2\r\n                n = Cylinder.computeFaceNormal(v1.x, v1.y, v1.z, v3.x, v3.y, v3.z, v2.x, v2.y, v2.z);\r\n                for (k = 0; k < 4; ++k) // same normals for all 4 vertices\r\n                {\r\n                    this.addNormal(ii + (k * 3), n[0], n[1], n[2]);\r\n                }\r\n\r\n                // next\r\n                ii += 12;\r\n                jj += 8;\r\n\r\n                // add indices of quad\r\n                this.addIndices(kk, index, index + 2, index + 1); // v1-v3-v2\r\n                this.addIndices(kk + 3, index + 1, index + 2, index + 3); // v2-v3-v4\r\n                kk += 6;\r\n                index += 4; // for next\r\n            }\r\n        }\r\n\r\n        // remember where the base index starts\r\n        let baseVertexIndex = ii / 3;\r\n\r\n        // put vertices of base of cylinder\r\n        z = -this.height * 0.5;\r\n        this.addVertex(ii, 0, 0, z);\r\n        this.addNormal(ii, 0, 0, -1);\r\n        this.addTexCoord(jj, 0.5, 0.5);\r\n        ii += 3;\r\n        jj += 2;\r\n        for (i = 0, j = 0; i < this.sectorCount; ++i, j += 3) {\r\n            x = this.unitCircleVertices[j];\r\n            y = this.unitCircleVertices[j + 1];\r\n            this.addVertex(ii, x * this.baseRadius, y * this.baseRadius, z);\r\n            this.addNormal(ii, 0, 0, -1);\r\n            this.addTexCoord(jj, -x * 0.5 + 0.5, -y * 0.5 + 0.5); // flip horizontal\r\n            ii += 3;\r\n            jj += 2;\r\n        }\r\n\r\n        // put indices for base\r\n        for (i = 0, k = baseVertexIndex + 1; i < this.sectorCount; ++i, ++k) {\r\n            if (i < this.sectorCount - 1)\r\n                this.addIndices(kk, baseVertexIndex, k + 1, k);\r\n\r\n            else\r\n                this.addIndices(kk, baseVertexIndex, baseVertexIndex + 1, k);\r\n\r\n            kk += 3;\r\n        }\r\n\r\n        // remember where the top index starts\r\n        let topVertexIndex = ii / 3;\r\n\r\n        // put vertices of top of cylinder\r\n        z = this.height * 0.5;\r\n        this.addVertex(ii, 0, 0, z);\r\n        this.addNormal(ii, 0, 0, 1);\r\n        this.addTexCoord(jj, 0.5, 0.5);\r\n        ii += 3;\r\n        jj += 2;\r\n        for (i = 0, j = 0; i < this.sectorCount; ++i, j += 3) {\r\n            x = this.unitCircleVertices[j];\r\n            y = this.unitCircleVertices[j + 1];\r\n            this.addVertex(ii, x * this.topRadius, y * this.topRadius, z);\r\n            this.addNormal(ii, 0, 0, 1);\r\n            this.addTexCoord(jj, x * 0.5 + 0.5, -y * 0.5 + 0.5);\r\n            ii += 3;\r\n            jj += 2;\r\n        }\r\n\r\n        for (i = 0, k = topVertexIndex + 1; i < this.sectorCount; ++i, ++k) {\r\n            if (i < this.sectorCount - 1)\r\n                this.addIndices(kk, topVertexIndex, k, k + 1);\r\n\r\n            else\r\n                this.addIndices(kk, topVertexIndex, k, topVertexIndex + 1);\r\n\r\n            kk += 3;\r\n        }\r\n\r\n        // generate interleaved vertex array as well\r\n        this.buildInterleavedVertices();\r\n        this.buildVbos();\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // generate interleaved vertices: V/N/T\r\n    // stride must be 32 bytes\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    buildInterleavedVertices() {\r\n        let vertexCount = this.getVertexCount();\r\n        this.interleavedVertices.length = 0;\r\n        this.interleavedVertices = new Float32Array(vertexCount * 8); // v(3)+n(3)+t(2)\r\n\r\n        let i, j, k;\r\n        for (i = 0, j = 0, k = 0; i < this.vertices.length; i += 3, j += 2, k += 8) {\r\n            this.interleavedVertices[k] = this.vertices[i];\r\n            this.interleavedVertices[k + 1] = this.vertices[i + 1];\r\n            this.interleavedVertices[k + 2] = this.vertices[i + 2];\r\n\r\n            this.interleavedVertices[k + 3] = this.normals[i];\r\n            this.interleavedVertices[k + 4] = this.normals[i + 1];\r\n            this.interleavedVertices[k + 5] = this.normals[i + 2];\r\n\r\n            this.interleavedVertices[k + 6] = this.texCoords[j];\r\n            this.interleavedVertices[k + 7] = this.texCoords[j + 1];\r\n        }\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // copy interleaved vertex data to VBOs\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    buildVbos() {\r\n        let gl = this.gl;\r\n        // copy vertices/normals/texcoords to VBO\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vboVertex);\r\n        gl.bufferData(gl.ARRAY_BUFFER, this.interleavedVertices, gl.STATIC_DRAW);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        // copy indices to VBO\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.vboIndex);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // generate shared normal vectors of the side of cylinder\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    getSideNormals() {\r\n        let sectorStep = 2 * Math.PI / this.sectorCount;\r\n        let sectorAngle = 0;\r\n\r\n        let zAngle = Math.atan2(this.baseRadius - this.topRadius, this.height);\r\n        let x0 = Math.cos(zAngle);\r\n        let y0 = 0;\r\n        let z0 = Math.sin(zAngle);\r\n\r\n        let normals = new Float32Array(3 * (this.sectorCount + 1));\r\n        for (let i = 0, j = 0; i <= this.sectorCount; ++i, j += 3) {\r\n            sectorAngle = i * sectorStep;\r\n            normals[j] = Math.cos(sectorAngle) * x0 - Math.sin(sectorAngle) * y0;\r\n            normals[j + 1] = Math.sin(sectorAngle) * x0 + Math.cos(sectorAngle) * y0;\r\n            normals[j + 2] = z0;\r\n        }\r\n        return normals;\r\n    }\r\n    addVertex(index, x, y, z) {\r\n        this.vertices[index] = x;\r\n        this.vertices[index + 1] = y;\r\n        this.vertices[index + 2] = z;\r\n    }\r\n    addNormal(index, x, y, z) {\r\n        this.normals[index] = x;\r\n        this.normals[index + 1] = y;\r\n        this.normals[index + 2] = z;\r\n    }\r\n    addTexCoord(index, s, t) {\r\n        this.texCoords[index] = s;\r\n        this.texCoords[index + 1] = t;\r\n    }\r\n    addIndices(index, i1, i2, i3) {\r\n        this.indices[index] = i1;\r\n        this.indices[index + 1] = i2;\r\n        this.indices[index + 2] = i3;\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////////\r\n    // class (static) function: generate face normal of a triangle\r\n    ///////////////////////////////////////////////////////////////////////////////\r\n    static computeFaceNormal(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\r\n        let normal = new Float32Array(3);\r\n        let ex1 = x2 - x1;\r\n        let ey1 = y2 - y1;\r\n        let ez1 = z2 - z1;\r\n        let ex2 = x3 - x1;\r\n        let ey2 = y3 - y1;\r\n        let ez2 = z3 - z1;\r\n        // cross product: e1 x e2;\r\n        let nx = ey1 * ez2 - ez1 * ey2;\r\n        let ny = ez1 * ex2 - ex1 * ez2;\r\n        let nz = ex1 * ey2 - ey1 * ex2;\r\n        let length = Math.sqrt(nx * nx + ny * ny + nz * nz);\r\n        if (length > 0.000001) {\r\n            normal[0] = nx / length;\r\n            normal[1] = ny / length;\r\n            normal[2] = nz / length;\r\n        }\r\n        return normal;\r\n    }\r\n}\r\n\r\nexport { Cylinder }\r\n","///////////////////////////////////////////////////////////////////////////////\r\n// Sphere.js\r\n// =========\r\n// With default constructor, it creates a sphere with radius=1, sectorCount=36,\r\n// stackCount=18, smooth=true.\r\n// The minimum # of sectors is 3 and stacks is 2.\r\n//\r\n// Example of OpenGL drawing calls (interleaved mode)\r\n// ===============================\r\n//  gl.bindBuffer(gl.ARRAY_BUFFER, sphere.vboVertex);\r\n//  gl.vertexAttribPointer(gl.program.attribute.vertexPosition, 3, gl.FLOAT, false, 32, 0);\r\n//  gl.vertexAttribPointer(gl.program.attribute.vertexNormal, 3, gl.FLOAT, false, 32, 12);\r\n//  gl.vertexAttribPointer(gl.program.attribute.vertexTexCoord, 2, gl.FLOAT, false, 32, 24);\r\n//  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, sphere.vboIndex);\r\n//  gl.drawElements(gl.TRIANGLES, sphere.getIndexCount(), gl.UNSIGNED_SHORT, 0);\r\n//\r\n//  AUTHOR: Song Ho Ahn (song.ahn@gmail.com)\r\n// CREATED: 2020-03-12\r\n// UPDATED: 2022-12-09\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nclass Sphere {\r\n    constructor(gl, radius = 1, sectors = 36, stacks = 18, smooth = true) {\r\n        this.gl = gl;\r\n        if (!gl)\r\n            log(\"[WARNING] Sphere.contructor requires GL context as a param.\");\r\n\r\n        this.radius = 1;\r\n        this.sectorCount = 36;\r\n        this.stackCount = 18;\r\n        this.smooth = true;\r\n        this.vertices = [];\r\n        this.normals = [];\r\n        this.texCoords = [];\r\n        this.indices = [];\r\n        this.interleavedVertices = [];\r\n        this.stride = 32; // stride for interleaved vertices, always=32\r\n        if (gl) {\r\n            this.vboVertex = gl.createBuffer();\r\n            this.vboIndex = gl.createBuffer();\r\n        }\r\n        // init\r\n        this.set(radius, sectors, stacks, smooth);\r\n    }\r\n    set(r, se, st, sm) {\r\n        this.radius = r;\r\n        this.sectorCount = se;\r\n        if (se < 3)\r\n            this.sectorCount = 3;\r\n        this.stackCount = st;\r\n        if (st < 2)\r\n            this.stackCount = 2;\r\n        this.smooth = sm;\r\n        if (sm)\r\n            this.buildVerticesSmooth();\r\n\r\n        else\r\n            this.buildVerticesFlat();\r\n        return this;\r\n    }\r\n    setRadius(r) {\r\n        if (this.radius != r)\r\n            this.set(r, this.sectorCount, this.stackCount, this.smooth);\r\n        return this;\r\n    }\r\n    setSectorCount(s) {\r\n        if (this.sectorCount != s)\r\n            this.set(this.radius, s, this.stackCount, this.smooth);\r\n        return this;\r\n    }\r\n    setStackCount(s) {\r\n        if (this.stackCount != s)\r\n            this.set(this.radius, this.sectorCount, s, this.smooth);\r\n        return this;\r\n    }\r\n    setSmooth(s) {\r\n        if (this.smooth != s) {\r\n            this.smooth = s;\r\n            if (this.smooth)\r\n                this.buildVerticesSmooth();\r\n\r\n            else\r\n                this.buildVerticesFlat();\r\n        }\r\n        return this;\r\n    }\r\n    reverseNormals() {\r\n        let i, j;\r\n        let count = this.normals.length;\r\n        for (i = 0, j = 3; i < count; i += 3, j += 8) {\r\n            this.normals[i] *= -1;\r\n            this.normals[i + 1] *= -1;\r\n            this.normals[i + 2] *= -1;\r\n\r\n            this.interleavedVertices[j] = this.normals[i];\r\n            this.interleavedVertices[j + 1] = this.normals[i + 1];\r\n            this.interleavedVertices[j + 2] = this.normals[i + 2];\r\n        }\r\n\r\n        let tmp;\r\n        count = this.indices.length;\r\n        for (i = 0; i < count; i += 3) {\r\n            tmp = this.indices[i];\r\n            this.indices[i] = this.indices[i + 2];\r\n            this.indices[i + 2] = tmp;\r\n        }\r\n\r\n        this.buildVbos();\r\n    }\r\n    getTriangleCount() {\r\n        return this.getIndexCount() / 3;\r\n    }\r\n    getIndexCount() {\r\n        return this.indices.length;\r\n    }\r\n    getVertexCount() {\r\n        return this.vertices.length / 3;\r\n    }\r\n    getNormalCount() {\r\n        return this.normals.length / 3;\r\n    }\r\n    getTexCoordCount() {\r\n        return this.texCoords.length / 2;\r\n    }\r\n    toString() {\r\n        return \"===== Sphere =====\\n\" +\r\n            \"        Radius: \" + this.radius + \"\\n\" +\r\n            \"  Sector Count: \" + this.sectorCount + \"\\n\" +\r\n            \"   Stack Count: \" + this.stackCount + \"\\n\" +\r\n            \" Smooth Shader: \" + this.smooth + \"\\n\" +\r\n            \"Triangle Count: \" + this.getTriangleCount() + \"\\n\" +\r\n            \"   Index Count: \" + this.getIndexCount() + \"\\n\" +\r\n            \"  Vertex Count: \" + this.getVertexCount() + \"\\n\" +\r\n            \"  Normal Count: \" + this.getNormalCount() + \"\\n\" +\r\n            \"TexCoord Count: \" + this.getTexCoordCount() + \"\\n\";\r\n    }\r\n    clearArrays() {\r\n        this.vertices.length = 0;\r\n        this.normals.length = 0;\r\n        this.texCoords.length = 0;\r\n        this.indices.length = 0;\r\n        this.interleavedVertices.length = 0;\r\n    }\r\n    resizeArraysSmooth() {\r\n        this.clearArrays();\r\n        let count = (this.sectorCount + 1) * (this.stackCount + 1);\r\n        this.vertices = new Float32Array(3 * count);\r\n        this.normals = new Float32Array(3 * count);\r\n        this.texCoords = new Float32Array(2 * count);\r\n        //this.indices = new Uint16Array(6 * this.sectorCount + 6 * (this.stackCount - 2) * this.sectorCount);\r\n        this.indices = new Uint16Array(6 * this.sectorCount * (this.stackCount - 1));\r\n    }\r\n    resizeArraysFlat() {\r\n        this.clearArrays();\r\n        let count = 6 * this.sectorCount + 4 * this.sectorCount * (this.stackCount - 2);\r\n        this.vertices = new Float32Array(3 * count);\r\n        this.normals = new Float32Array(3 * count);\r\n        this.texCoords = new Float32Array(2 * count);\r\n        //this.indices = new Uint16Array(6 * this.sectorCount + 6 * (this.stackCount - 2) * this.sectorCount);\r\n        this.indices = new Uint16Array(6 * this.sectorCount * (this.stackCount - 1));\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // generate vertices of sphere with smooth shading\r\n    // x = r * cos(u) * cos(v)\r\n    // y = r * cos(u) * sin(v)\r\n    // z = r * sin(u)\r\n    // where u: stack(latitude) angle (-90 <= u <= 90)\r\n    //       v: sector(longitude) angle (0 <= v <= 360)\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    buildVerticesSmooth() {\r\n        // resize typed arrays\r\n        this.resizeArraysSmooth();\r\n\r\n        let x, y, z, xy, nx, ny, nz, s, t, i, j, k, k1, k2, ii, jj, kk;\r\n        let lengthInv = 1.0 / this.radius;\r\n        let sectorStep = 2 * Math.PI / this.sectorCount;\r\n        let stackStep = Math.PI / this.stackCount;\r\n        let sectorAngle, stackAngle;\r\n\r\n        ii = jj = kk = 0;\r\n        for (i = 0; i <= this.stackCount; ++i) {\r\n            stackAngle = Math.PI / 2 - i * stackStep; // starting from pi/2 to -pi/2\r\n            xy = this.radius * Math.cos(stackAngle); // r * cos(u)\r\n            z = this.radius * Math.sin(stackAngle); // r * sin(u)\r\n\r\n\r\n\r\n            // add (sectorCount+1) vertices per stack\r\n            // the first and last vertices have same position and normal, but different tex coords\r\n            for (j = 0; j <= this.sectorCount; ++j) {\r\n                sectorAngle = j * sectorStep; // starting from 0 to 2pi\r\n\r\n\r\n                // vertex position\r\n                x = xy * Math.cos(sectorAngle); // r * cos(u) * cos(v)\r\n                y = xy * Math.sin(sectorAngle); // r * cos(u) * sin(v)\r\n                this.addVertex(ii, x, y, z);\r\n\r\n                // normalized vertex normal\r\n                nx = x * lengthInv;\r\n                ny = y * lengthInv;\r\n                nz = z * lengthInv;\r\n                this.addNormal(ii, nx, ny, nz);\r\n\r\n                // vertex tex coord between [0, 1]\r\n                s = j / this.sectorCount;\r\n                t = i / this.stackCount;\r\n                this.addTexCoord(jj, s, t);\r\n\r\n                // next\r\n                ii += 3;\r\n                jj += 2;\r\n            }\r\n        }\r\n\r\n        // indices\r\n        //  k1--k1+1\r\n        //  |  / |\r\n        //  | /  |\r\n        //  k2--k2+1\r\n        for (i = 0; i < this.stackCount; ++i) {\r\n            k1 = i * (this.sectorCount + 1); // beginning of current stack\r\n            k2 = k1 + this.sectorCount + 1; // beginning of next stack\r\n\r\n            for (j = 0; j < this.sectorCount; ++j, ++k1, ++k2) {\r\n                // 2 triangles per sector excluding 1st and last stacks\r\n                if (i != 0) {\r\n                    this.addIndices(kk, k1, k2, k1 + 1); // k1---k2---k1+1\r\n                    kk += 3;\r\n                }\r\n\r\n                if (i != (this.stackCount - 1)) {\r\n                    this.addIndices(kk, k1 + 1, k2, k2 + 1); // k1+1---k2---k2+1\r\n                    kk += 3;\r\n                }\r\n            }\r\n        }\r\n\r\n        // generate interleaved vertex array as well\r\n        this.buildInterleavedVertices();\r\n        this.buildVbos();\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // generate vertices of sphere with flat shading\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    buildVerticesFlat() {\r\n        let i, j, k, x, y, z, s, t, n, xy, v1, v2, v3, v4, vi1, vi2, index, ii, jj, kk;\r\n        let sectorStep = 2 * Math.PI / this.sectorCount;\r\n        let stackStep = Math.PI / this.stackCount;\r\n        let sectorAngle, stackAngle;\r\n        let tmpVertices = [];\r\n        let vertex = {}; // to store (x,y,z,s,t)\r\n\r\n\r\n        // compute all vertices first, each vertex contains (x,y,z,s,t) except normal\r\n        for (i = 0; i <= this.stackCount; ++i) {\r\n            stackAngle = Math.PI / 2 - i * stackStep; // starting from pi/2 to -pi/2\r\n            xy = this.radius * Math.cos(stackAngle); // r * cos(u)\r\n            z = this.radius * Math.sin(stackAngle); // r * sin(u)\r\n\r\n\r\n\r\n            // add (sectorCount+1) vertices per stack\r\n            // the first and last vertices have same position and normal, but different tex coords\r\n            for (j = 0; j <= this.sectorCount; ++j) {\r\n                sectorAngle = j * sectorStep; // starting from 0 to 2pi\r\n                vertex = {\r\n                    x: xy * Math.cos(sectorAngle),\r\n                    y: xy * Math.sin(sectorAngle),\r\n                    z: z,\r\n                    s: j / this.sectorCount,\r\n                    t: i / this.stackCount\r\n                };\r\n                tmpVertices.push(vertex);\r\n            }\r\n        }\r\n\r\n        // resize typed arrays\r\n        this.resizeArraysFlat();\r\n\r\n        ii = jj = kk = index = 0;\r\n        for (i = 0; i < this.stackCount; ++i) {\r\n            vi1 = i * (this.sectorCount + 1); // index of tmpVertices\r\n            vi2 = (i + 1) * (this.sectorCount + 1);\r\n\r\n            for (j = 0; j < this.sectorCount; ++j, ++vi1, ++vi2) {\r\n                // get 4 vertices per sector\r\n                //  v1-v3\r\n                //  |  |\r\n                //  v2-v4\r\n                v1 = tmpVertices[vi1];\r\n                v2 = tmpVertices[vi2];\r\n                v3 = tmpVertices[vi1 + 1];\r\n                v4 = tmpVertices[vi2 + 1];\r\n\r\n                // if 1st stack and last stack, store only 1 triangle per sector\r\n                // otherwise, store 2 triangles (quad) per sector\r\n                if (i == 0) // a triangle for first stack ======================\r\n                {\r\n                    // put a triangle\r\n                    this.addVertex(ii, v1.x, v1.y, v1.z);\r\n                    this.addVertex(ii + 3, v2.x, v2.y, v2.z);\r\n                    this.addVertex(ii + 6, v4.x, v4.y, v4.z);\r\n\r\n                    // put tex coords of triangle\r\n                    this.addTexCoord(jj, v1.s, v1.t);\r\n                    this.addTexCoord(jj + 2, v2.s, v2.t);\r\n                    this.addTexCoord(jj + 4, v4.s, v4.t);\r\n\r\n                    // put normal\r\n                    n = Sphere.computeFaceNormal(v1.x, v1.y, v1.z, v2.x, v2.y, v2.z, v4.x, v4.y, v4.z);\r\n                    this.addNormal(ii, n[0], n[1], n[2]);\r\n                    this.addNormal(ii + 3, n[0], n[1], n[2]);\r\n                    this.addNormal(ii + 6, n[0], n[1], n[2]);\r\n\r\n                    // put indices of 1 triangle\r\n                    this.addIndices(kk, index, index + 1, index + 2);\r\n\r\n                    // next\r\n                    ii += 9;\r\n                    jj += 6;\r\n                    kk += 3;\r\n                    index += 3;\r\n                }\r\n                else if (i == (this.stackCount - 1)) // a triangle for last stack =====\r\n                {\r\n                    // put a triangle\r\n                    this.addVertex(ii, v1.x, v1.y, v1.z);\r\n                    this.addVertex(ii + 3, v2.x, v2.y, v2.z);\r\n                    this.addVertex(ii + 6, v3.x, v3.y, v3.z);\r\n\r\n                    // put tex coords of triangle\r\n                    this.addTexCoord(jj, v1.s, v1.t);\r\n                    this.addTexCoord(jj + 2, v2.s, v2.t);\r\n                    this.addTexCoord(jj + 4, v3.s, v3.t);\r\n\r\n                    // put normal\r\n                    n = Sphere.computeFaceNormal(v1.x, v1.y, v1.z, v2.x, v2.y, v2.z, v3.x, v3.y, v3.z);\r\n                    this.addNormal(ii, n[0], n[1], n[2]);\r\n                    this.addNormal(ii + 3, n[0], n[1], n[2]);\r\n                    this.addNormal(ii + 6, n[0], n[1], n[2]);\r\n\r\n                    // put indices of 1 triangle\r\n                    this.addIndices(kk, index, index + 1, index + 2);\r\n\r\n                    // next\r\n                    ii += 9;\r\n                    jj += 6;\r\n                    kk += 3;\r\n                    index += 3;\r\n                }\r\n                else // 2 triangles for others ================================\r\n                {\r\n                    // put quad vertices: v1-v2-v3-v4\r\n                    this.addVertex(ii, v1.x, v1.y, v1.z);\r\n                    this.addVertex(ii + 3, v2.x, v2.y, v2.z);\r\n                    this.addVertex(ii + 6, v3.x, v3.y, v3.z);\r\n                    this.addVertex(ii + 9, v4.x, v4.y, v4.z);\r\n\r\n                    // put tex coords of quad\r\n                    this.addTexCoord(jj, v1.s, v1.t);\r\n                    this.addTexCoord(jj + 2, v2.s, v2.t);\r\n                    this.addTexCoord(jj + 4, v3.s, v3.t);\r\n                    this.addTexCoord(jj + 6, v4.s, v4.t);\r\n\r\n                    // put normal\r\n                    n = Sphere.computeFaceNormal(v1.x, v1.y, v1.z, v2.x, v2.y, v2.z, v3.x, v3.y, v3.z);\r\n                    this.addNormal(ii, n[0], n[1], n[2]);\r\n                    this.addNormal(ii + 3, n[0], n[1], n[2]);\r\n                    this.addNormal(ii + 6, n[0], n[1], n[2]);\r\n\r\n                    // put indices of quad (2 triangles)\r\n                    this.addIndices(kk, index, index + 1, index + 2);\r\n                    this.addIndices(kk + 3, index + 2, index + 1, index + 3);\r\n\r\n                    // next\r\n                    ii += 12;\r\n                    jj += 8;\r\n                    kk += 6;\r\n                    index += 4;\r\n                }\r\n            }\r\n        }\r\n\r\n        // generate interleaved vertex array as well\r\n        this.buildInterleavedVertices();\r\n        this.buildVbos();\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // generate interleaved vertices: V/N/T\r\n    // stride must be 32 bytes\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    buildInterleavedVertices() {\r\n        let vertexCount = this.getVertexCount();\r\n        this.interleavedVertices.length = 0;\r\n        this.interleavedVertices = new Float32Array(vertexCount * 8); // v(3)+n(3)+t(2)\r\n\r\n        let i, j, k;\r\n        for (i = 0, j = 0, k = 0; i < this.vertices.length; i += 3, j += 2, k += 8) {\r\n            this.interleavedVertices[k] = this.vertices[i];\r\n            this.interleavedVertices[k + 1] = this.vertices[i + 1];\r\n            this.interleavedVertices[k + 2] = this.vertices[i + 2];\r\n\r\n            this.interleavedVertices[k + 3] = this.normals[i];\r\n            this.interleavedVertices[k + 4] = this.normals[i + 1];\r\n            this.interleavedVertices[k + 5] = this.normals[i + 2];\r\n\r\n            this.interleavedVertices[k + 6] = this.texCoords[j];\r\n            this.interleavedVertices[k + 7] = this.texCoords[j + 1];\r\n        }\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // copy interleaved vertex data to VBOs\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    buildVbos() {\r\n        let gl = this.gl;\r\n        // copy vertices/normals/texcoords to VBO\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vboVertex);\r\n        gl.bufferData(gl.ARRAY_BUFFER, this.interleavedVertices, gl.STATIC_DRAW);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        // copy indices to VBO\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.vboIndex);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // add vertex, normal, texcoord and indices\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    addVertex(index, x, y, z) {\r\n        this.vertices[index] = x;\r\n        this.vertices[index + 1] = y;\r\n        this.vertices[index + 2] = z;\r\n    }\r\n    addNormal(index, x, y, z) {\r\n        this.normals[index] = x;\r\n        this.normals[index + 1] = y;\r\n        this.normals[index + 2] = z;\r\n    }\r\n    addTexCoord(index, s, t) {\r\n        this.texCoords[index] = s;\r\n        this.texCoords[index + 1] = t;\r\n    }\r\n    addIndices(index, i1, i2, i3) {\r\n        this.indices[index] = i1;\r\n        this.indices[index + 1] = i2;\r\n        this.indices[index + 2] = i3;\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////////\r\n    // class (static) functions\r\n    ///////////////////////////////////////////////////////////////////////////////\r\n    static computeFaceNormal(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\r\n        let normal = new Float32Array(3);\r\n        let ex1 = x2 - x1;\r\n        let ey1 = y2 - y1;\r\n        let ez1 = z2 - z1;\r\n        let ex2 = x3 - x1;\r\n        let ey2 = y3 - y1;\r\n        let ez2 = z3 - z1;\r\n        // cross product: e1 x e2;\r\n        let nx = ey1 * ez2 - ez1 * ey2;\r\n        let ny = ez1 * ex2 - ex1 * ez2;\r\n        let nz = ex1 * ey2 - ey1 * ex2;\r\n        let length = Math.sqrt(nx * nx + ny * ny + nz * nz);\r\n        if (length > 0.000001) {\r\n            normal[0] = nx / length;\r\n            normal[1] = ny / length;\r\n            normal[2] = nz / length;\r\n        }\r\n        return normal;\r\n    }\r\n}\r\n\r\nexport { Sphere }","import { Color } from \"./color\";\r\nimport { Component, Primitive } from \"./component\";\r\nimport { Constants } from \"./constants\";\r\nimport { Cylinder } from \"./cylinder\";\r\nimport { Sphere } from \"./sphere\";\r\n\r\nnamespace ComponentFactory {\r\n    export function createCube(gl: WebGL2RenderingContext, size: number, color: Color): Primitive {\r\n        let vertices: Array<number> = [\r\n            // Front face\r\n            -1.0, -1.0, 1.0,\r\n            1.0, -1.0, 1.0,\r\n            1.0, 1.0, 1.0,\r\n            -1.0, 1.0, 1.0,\r\n            // Back face\r\n            -1.0, -1.0, -1.0,\r\n            -1.0, 1.0, -1.0,\r\n            1.0, 1.0, -1.0,\r\n            1.0, -1.0, -1.0,\r\n            // Top face\r\n            -1.0, 1.0, -1.0,\r\n            -1.0, 1.0, 1.0,\r\n            1.0, 1.0, 1.0,\r\n            1.0, 1.0, -1.0,\r\n            // Bottom face\r\n            -1.0, -1.0, -1.0,\r\n            1.0, -1.0, -1.0,\r\n            1.0, -1.0, 1.0,\r\n            -1.0, -1.0, 1.0,\r\n            // Right face\r\n            1.0, -1.0, -1.0,\r\n            1.0, 1.0, -1.0,\r\n            1.0, 1.0, 1.0,\r\n            1.0, -1.0, 1.0,\r\n            // Left face\r\n            -1.0, -1.0, -1.0,\r\n            -1.0, -1.0, 1.0,\r\n            -1.0, 1.0, 1.0,\r\n            -1.0, 1.0, -1.0,\r\n            ];\r\n        let indices: Array<number> = [\r\n            0, 1, 2, 0, 2, 3, // front\r\n            4, 5, 6, 4, 6, 7, // back\r\n            8, 9, 10, 8, 10, 11, // top\r\n            12, 13, 14, 12, 14, 15, // bottom\r\n            16, 17, 18, 16, 18, 19, // right\r\n            20, 21, 22, 20, 22, 23, // left\r\n            ];\r\n        // Adjust vertices\r\n        for (let i = 0; i < vertices.length; i++) {\r\n            vertices[i] *= size;\r\n        }\r\n        // Add colors\r\n        let colors: Array<number> = createColorArray(vertices.length / Constants.FLOATS_PER_VERTEX, color);\r\n        return Primitive.create(gl, vertices, colors, indices);\r\n    }\r\n\r\n    export function createCylinder(gl: WebGL2RenderingContext, baseRadius: number, topRadius: number, height: number,\r\n        numberOfSlices: number, numberOfStacks: number, color: Color): Primitive {\r\n        let cylinder: Cylinder = new Cylinder(gl, baseRadius, topRadius, height, numberOfSlices, numberOfStacks, true);\r\n        let vertices: Array<number> = cylinder.vertices;\r\n        let colors: Array<number> = createColorArray(vertices.length / Constants.FLOATS_PER_VERTEX, color);\r\n        let indices: Array<number> = cylinder.indices;\r\n        return Primitive.create(gl, vertices, colors, indices);\r\n    }\r\n\r\n    export function createSphere(gl: WebGL2RenderingContext, radius: number, numberOfSlices: number,\r\n        numberOfStacks: number, color: Color):\r\n        Component {\r\n        let sphere: Sphere = new Sphere(gl, radius, numberOfSlices, numberOfStacks, true);\r\n        let vertices: Array<number> = sphere.vertices;\r\n        let indices: Array<number> = sphere.indices;\r\n        let colors: Array<number> = createColorArray(vertices.length / Constants.FLOATS_PER_VERTEX, color);\r\n        return Primitive.create(gl, vertices, colors, indices);\r\n    }\r\n\r\n    function createColorArray(length: number, color: Color): Array<number> {\r\n        length *= Constants.FLOATS_PER_COLOR;\r\n        let colors: Array<number> = new Array(length);\r\n        for (let i = 0; i < length; i += Constants.FLOATS_PER_COLOR) {\r\n            colors[i] = color.red;\r\n            colors[i + 1] = color.green;\r\n            colors[i + 2] = color.blue;\r\n            colors[i + 3] = color.alpha;\r\n        }\r\n        return colors;\r\n    }\r\n}\r\n\r\nexport { ComponentFactory }","import { Color } from \"./color\";\r\nimport { ComponentFactory } from \"./component_factory\";\r\nimport { Entity } from \"./entity\";\r\n\r\nnamespace EntityFactory {\r\n    export function createCube(gl: WebGL2RenderingContext, color: Color): Entity {\r\n        let spinner: Entity = new Entity([\r\n            ComponentFactory.createCube(gl, 1, color)\r\n        ]);\r\n        return spinner;\r\n    }\r\n\r\n    export function createCylinder(gl: WebGL2RenderingContext, color: Color): Entity {\r\n        let cylinder: Entity = new Entity([\r\n            ComponentFactory.createCylinder(gl, 1, 1, 2, 36, 1, color)\r\n        ]);\r\n        return cylinder;\r\n    }\r\n\r\n    export function createSphere(gl: WebGL2RenderingContext, color: Color): Entity {\r\n        let sphere: Entity = new Entity([\r\n            ComponentFactory.createSphere(gl, 0.75, 18, 18, color)\r\n        ]);\r\n        return sphere;\r\n    }\r\n}\r\n\r\nexport { EntityFactory };\r\n\r\n","import { Camera } from \"./camera\";\r\nimport { Color } from \"./color\";\r\nimport { Bobber, MovementController, RotationController, Spinner } from \"./component\";\r\nimport { Entity } from \"./entity\";\r\nimport { EntityFactory } from \"./entity_factory\";\r\nimport { RenderState } from \"./render_state\";\r\nimport { Vector3 } from \"./vector3\";\r\n\r\n/**\r\n * The main container for the scene. Includes every visible and updateable object that the user can see/interact with.\r\n */\r\nclass World {\r\n    private entities: Array<Entity> = [];\r\n\r\n    private constructor(entities: Array<Entity> = []) {\r\n        this.entities = entities;\r\n    }\r\n\r\n    /**\r\n     * Create and return the world and attach the relevant components to the camera.\r\n     * @param gl The WebGL context.\r\n     * @param camera The main camera.\r\n     * @returns The fully initialized world.\r\n     */\r\n    public static create(gl: WebGL2RenderingContext, camera: Camera): World {\r\n        // Create the pivot, or the object around which the camera moves and rotates\r\n        let pivot: Entity = new Entity();\r\n        pivot.addComponent(new RotationController(Math.PI / 2, Math.PI / 2, Math.PI / 2, pivot.rotation));\r\n\r\n        // Initialize the camera\r\n        camera.parent = pivot;\r\n        camera.translation = new Vector3(0, 0, 6);\r\n        camera.addComponent(new MovementController(10, camera.translation));\r\n\r\n        // Create the cube\r\n        let cube: Entity = EntityFactory.createCube(gl, Color.fromInt8(72, 107, 127));\r\n        cube.scale = Vector3.multiply(Vector3.one, 0.5);\r\n        cube.addComponent(new Bobber(0, 2, 0, -1, 0.125));\r\n        cube.addComponent(new Spinner(0, 0.25, 0));\r\n        \r\n        // Create the cylinder, which is attached to the cube\r\n        let cylinder: Entity = EntityFactory.createCylinder(gl, Color.fromInt8(209, 191, 176));\r\n        cylinder.parent = cube;\r\n        cylinder.translation = Vector3.multiply(Vector3.up, 4);\r\n        cylinder.scale = Vector3.multiply(Vector3.one, 0.5);\r\n        cylinder.addComponent(new Spinner(0, 2, 1.4));\r\n\r\n        // Create the spheres, which orbit around the cylinder\r\n        let spheres: Array<Entity> = [];\r\n        let distanceFromCylinder: number = 3;\r\n        let numberOfSpheres: number = 8;\r\n        let color1: Color = Color.fromInt8(187, 71, 79);\r\n        let color2: Color = Color.fromInt8(122, 156, 150);\r\n        for (let i = 0; i < numberOfSpheres; i++) {\r\n            let radians: number = 2 * Math.PI * (i / numberOfSpheres);\r\n            let offset: Vector3 = new Vector3(Math.cos(radians), Math.sin(radians), 0);\r\n            let translation: Vector3 = Vector3.multiply(offset, distanceFromCylinder);\r\n            let color: Color;\r\n            if (i === 0) {\r\n                color = color1;\r\n            } else {\r\n                color = Color.lerp(color2, color1, Math.abs(Math.PI - radians) / Math.PI);\r\n            }\r\n\r\n            let currentSphere: Entity = EntityFactory.createSphere(gl, color);\r\n            currentSphere.parent = cylinder;\r\n            currentSphere.translation = translation;\r\n            currentSphere.addComponent(\r\n                new Bobber(-10, 10, translation.x, translation.y, 0.125, i)\r\n            );\r\n            spheres.push(currentSphere);\r\n        }\r\n        \r\n        // Return the world with all its components\r\n        return new World(spheres.concat([\r\n            camera,\r\n            cube,\r\n            cylinder,\r\n            pivot\r\n        ]));\r\n    }\r\n\r\n    /**\r\n     * Update every entity in the world.\r\n     * @param delta The elapsed time since the last frame.\r\n     */\r\n    public update(delta: number): void {\r\n        this.entities.forEach((entity) => {\r\n            entity.update(delta);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Render every visible entity in the world.\r\n     * @param gl The WebGL context.\r\n     * @param renderState The render state.\r\n     */\r\n    public render(gl: WebGL2RenderingContext, renderState: RenderState): void {\r\n        this.entities.forEach((entity) => {\r\n            entity.render(gl, renderState);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add the given entity to the world.\r\n     * @param entity The entity to add.\r\n     */\r\n    public addEntity(entity: Entity): void {\r\n        this.entities.push(entity);\r\n    }\r\n\r\n    /**\r\n     * Add each of the entities in the given list to the world.\r\n     * @param entities The list of entities to add.\r\n     */\r\n    public addEntities(entities: Array<Entity>): void {\r\n        entities.forEach((entity) => {\r\n            this.addEntity(entity);\r\n        });\r\n    }\r\n}\r\n\r\nexport { World };\r\n\r\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./stylesheet.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./stylesheet.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Input } from \"./input\";\r\nimport { RenderState } from \"./render_state\";\r\nimport { World } from \"./world\";\r\nimport \"./styles/stylesheet.css\"\r\nimport { Color } from \"./color\";\r\n\r\n// WebGL context\r\nlet gl: WebGL2RenderingContext;\r\n\r\n// Globals\r\nlet world: World;\r\nlet renderState: RenderState;\r\nlet previousTime = 0;\r\n\r\n// HTML elements\r\nlet canvas: HTMLCanvasElement = document.getElementById(\"code00-canvas\") as HTMLCanvasElement;\r\n\r\nmain();\r\n\r\n/**\r\n * Initialize WebGL.\r\n * @param canvas the canvas attached to the WebGL context\r\n */\r\nfunction initGL(canvas: HTMLCanvasElement): WebGL2RenderingContext {\r\n    let gl: WebGL2RenderingContext;\r\n\r\n    try {\r\n        gl = canvas.getContext(\"webgl2\") as WebGL2RenderingContext;  // the graphics context\r\n    } catch (e) {\r\n        gl = null;\r\n        console.error(\"Couldn't load the WebGL context\");\r\n    }\r\n\r\n    return gl;\r\n}\r\n\r\n/**\r\n * Update the scene.\r\n * @param delta The time, in seconds, since the last call to update.\r\n */\r\nfunction update(delta: number): void {\r\n    world.update(delta);\r\n}\r\n\r\n/**\r\n * Render the scene, including all game objects in the world.\r\n */\r\nfunction render(): void {\r\n    renderState.Begin(gl);\r\n    world.render(gl, renderState);\r\n}\r\n\r\n/**\r\n * Process a single animation frame.\r\n * @param time The number of milliseconds since the first call to this method.\r\n */\r\nfunction tick(time: DOMHighResTimeStamp): void{\r\n    // Calculate delta time\r\n    let delta: number = (time - previousTime) * 0.001;\r\n    previousTime = time;\r\n\r\n    // Update and draw\r\n    update(delta);\r\n    render();\r\n    \r\n    // Loop\r\n    requestAnimationFrame(tick);\r\n}\r\n\r\n/**\r\n * Start WebGL.\r\n */\r\nfunction main(): void {\r\n    gl = initGL(canvas);\r\n    \r\n    if (!gl) {\r\n        alert(\"Could not initialise WebGL, sorry :-(\");\r\n        return;\r\n    }\r\n\r\n    // Load config files\r\n    let inputConfig: object = require(\"./config/input.json\");\r\n    let fragmentSource: string = require(\"./shaders/fragment.glsl\");\r\n    let vertexSource: string = require(\"./shaders/vertex.glsl\");\r\n    let clearColor: Color = Color.fromInt8(57, 43, 53);\r\n\r\n    // Initialize systems\r\n    Input.initialize(inputConfig);\r\n    renderState = RenderState.create(gl, fragmentSource, vertexSource, clearColor);\r\n    world = World.create(gl, renderState.camera);\r\n\r\n    // Start the loop\r\n    requestAnimationFrame(tick);\r\n}"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","nc","Input","_Input","addEventListener","ev","setActionStateFromKey","ActionState","Down","Up","resetActionStates","actionMap","Map","actionStates","isInputCaseSensitive","addAction","actionName","capitalizeFirstLetter","has","console","error","set","getActionStateFromName","None","actionState","s","charAt","toUpperCase","slice","_step","_iterator","_createForOfIteratorHelper","done","_step$value","value","err","f","initialize","arguments","entries","forEach","isActionUp","isActionDown","Constants","EPSILON","_Constants","FLOATS_PER_VERTEX","FLOATS_PER_COLOR","Matrix4","_Float32Array","_inherits","_super","_this","_classCallCheck","b","q","v","out","x","y","z","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","fovy","aspect","near","far","nf","Math","tan","Infinity","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","rad","axis","c","t","b12","b20","b21","b22","len","hypot","sin","cos","_wrapNativeSuper","Float32Array","Quaternion","r","halfToRad","PI","cx","cy","cz","radians","ax","ay","az","aw","bx","bw","by","bz","Vector3","sqrt","pow","scale","random","dx","dy","dz","Entity","_SpatialObject","components","_assertThisInitialized","delta","_this2","component","gl","renderState","_this3","render","SpatialObject","rotation","identity","translation","zero","one","add","rotateX","rotateY","rotateZ","parentObj","fromRotationTranslationScale","multiply","transformation","Camera","_Entity","canvas","width","height","inverse","perspective","projection","view","Color","g","red","green","blue","alpha","lerpNum","clamp","fieldName","warn","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","alert","getShaderInfoLog","RenderState","fragmentShaderSource","vertexShaderSource","clearColor","black","shaderProgram","createProgram","fragmentShader","FRAGMENT_SHADER","vertexShader","VERTEX_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","initShaderProgram","vertexPositionAttribute","getAttribLocation","enableVertexAttribArray","vertexColorAttribute","uniformModelMatrix","getUniformLocation","uniformViewProjectionMatrix","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","uniformMatrix4fv","camera","viewProjection","mainCamera","create","Component","_createClass","entity","Primitive","_Component","_createSuper","drawMode","vertexBuffer","colorBuffer","indexBuffer","vertexCount","glDrawMode","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","ELEMENT_ARRAY_BUFFER","wireframeEnabled","drawElements","LINE_STRIP","UNSIGNED_SHORT","vertices","colors","indices","createBuffer","bufferData","STATIC_DRAW","Uint16Array","TRIANGLES","Spinner","_Component2","_super2","xSpeed","ySpeed","zSpeed","Bobber","_Component3","_super3","xInitial","yInitial","amplitude","phase","time","RotationController","_Component4","_super4","yawSpeed","pitchSpeed","rollSpeed","initialRotation","_this4","copy","MovementController","_Component5","_super5","speed","initialTranslation","_this5","direction","subtract","forward","right","normalize","translate","Cylinder","baseR","topR","h","sectors","stacks","smooth","log","baseRadius","topRadius","sectorCount","stackCount","unitCircleVertices","normals","texCoords","interleavedVertices","stride","vboVertex","vboIndex","buildUnitCircleVertices","buildVerticesSmooth","buildVerticesFlat","br","tr","se","st","sm","getIndexCount","getTriangleCount","getVertexCount","getNormalCount","getTexCoordCount","clearArrays","sideCount","baseCount","sectorStep","sectorAngle","j","k1","k2","resizeArraysSmooth","ii","jj","kk","sideNormals","getSideNormals","addVertex","addNormal","addTexCoord","baseVertexIndex","topVertexIndex","addIndices","buildInterleavedVertices","buildVbos","v1","v2","v3","v4","tmpVertices","vertex","m","l","resizeArraysFlat","vi1","vi2","computeFaceNormal","zAngle","atan2","x0","z0","i1","i2","i3","x1","y1","z1","x3","y3","z3","normal","ex1","ey1","ez1","ex2","ey2","ez2","nx","ny","nz","ComponentFactory","EntityFactory","_EntityFactory","Sphere","radius","tmp","stackAngle","lengthInv","stackStep","_ComponentFactory","createColorArray","color","Array","createCube","size","createCylinder","numberOfSlices","numberOfStacks","cylinder","createSphere","sphere","World","entities","addEntity","pivot","addComponent","parent","cube","fromInt8","up","spheres","color1","color2","offset","lerp","abs","currentSphere","world","previousTime","getElementById","tick","Begin","requestAnimationFrame","getContext","initGL","inputConfig","require","fragmentSource","vertexSource","main"],"sourceRoot":""}